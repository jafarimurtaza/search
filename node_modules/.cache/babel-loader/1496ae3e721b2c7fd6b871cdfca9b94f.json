{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { Component, Children } from 'react';\nimport isEqual from 'react-fast-compare';\nimport PropTypes from 'prop-types';\nimport createInstantSearchManager from '../core/createInstantSearchManager';\nimport { InstantSearchProvider } from '../core/context';\n\nfunction isControlled(props) {\n  return Boolean(props.searchState);\n}\n/**\n * @description\n * `<InstantSearch>` is the root component of all React InstantSearch implementations.\n * It provides all the connected components (aka widgets) a means to interact\n * with the searchState.\n * @kind widget\n * @name <InstantSearch>\n * @requirements You will need to have an Algolia account to be able to use this widget.\n * [Create one now](https://www.algolia.com/users/sign_up).\n * @propType {string} indexName - Main index in which to search.\n * @propType {boolean} [refresh=false] - Flag to activate when the cache needs to be cleared so that the front-end is updated when a change occurs in the index.\n * @propType {object} [searchClient] - Provide a custom search client.\n * @propType {func} [onSearchStateChange] - Function to be called everytime a new search is done. Useful for [URL Routing](guide/Routing.html).\n * @propType {object} [searchState] - Object to inject some search state. Switches the InstantSearch component in controlled mode. Useful for [URL Routing](guide/Routing.html).\n * @propType {func} [createURL] - Function to call when creating links, useful for [URL Routing](guide/Routing.html).\n * @propType {SearchResults|SearchResults[]} [resultsState] - Use this to inject the results that will be used at first rendering. Those results are found by using the `findResultsState` function. Useful for [Server Side Rendering](guide/Server-side_rendering.html).\n * @propType {number} [stalledSearchDelay=200] - The amount of time before considering that the search takes too much time. The time is expressed in milliseconds.\n * @propType {{ Root: string|function, props: object }} [root] - Use this to customize the root element. Default value: `{ Root: 'div' }`\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, SearchBox, Hits } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <SearchBox />\n *     <Hits />\n *   </InstantSearch>\n * );\n */\n\n\nvar InstantSearch = /*#__PURE__*/function (_Component) {\n  _inherits(InstantSearch, _Component);\n\n  _createClass(InstantSearch, null, [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var nextIsControlled = isControlled(nextProps);\n      var previousSearchState = prevState.instantSearchManager.store.getState().widgets;\n      var nextSearchState = nextProps.searchState;\n\n      if (nextIsControlled && !isEqual(previousSearchState, nextSearchState)) {\n        prevState.instantSearchManager.onExternalStateUpdate(nextProps.searchState);\n      }\n\n      return {\n        isControlled: nextIsControlled,\n        contextValue: _objectSpread({}, prevState.contextValue, {\n          mainTargetedIndex: nextProps.indexName\n        })\n      };\n    }\n  }]);\n\n  function InstantSearch(props) {\n    var _this;\n\n    _classCallCheck(this, InstantSearch);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InstantSearch).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"isUnmounting\", false);\n\n    var instantSearchManager = createInstantSearchManager({\n      indexName: _this.props.indexName,\n      searchClient: _this.props.searchClient,\n      initialState: _this.props.searchState || {},\n      resultsState: _this.props.resultsState,\n      stalledSearchDelay: _this.props.stalledSearchDelay\n    });\n    var contextValue = {\n      store: instantSearchManager.store,\n      widgetsManager: instantSearchManager.widgetsManager,\n      mainTargetedIndex: _this.props.indexName,\n      onInternalStateUpdate: _this.onWidgetsInternalStateUpdate.bind(_assertThisInitialized(_this)),\n      createHrefForState: _this.createHrefForState.bind(_assertThisInitialized(_this)),\n      onSearchForFacetValues: _this.onSearchForFacetValues.bind(_assertThisInitialized(_this)),\n      onSearchStateChange: _this.onSearchStateChange.bind(_assertThisInitialized(_this)),\n      onSearchParameters: _this.onSearchParameters.bind(_assertThisInitialized(_this))\n    };\n    _this.state = {\n      isControlled: isControlled(_this.props),\n      instantSearchManager: instantSearchManager,\n      contextValue: contextValue\n    };\n    return _this;\n  }\n\n  _createClass(InstantSearch, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var prevIsControlled = isControlled(prevProps);\n\n      if (prevIsControlled && !this.state.isControlled) {\n        throw new Error(\"You can't switch <InstantSearch> from being controlled to uncontrolled\");\n      }\n\n      if (!prevIsControlled && this.state.isControlled) {\n        throw new Error(\"You can't switch <InstantSearch> from being uncontrolled to controlled\");\n      }\n\n      if (this.props.refresh !== prevProps.refresh && this.props.refresh) {\n        this.state.instantSearchManager.clearCache();\n      }\n\n      if (prevProps.indexName !== this.props.indexName) {\n        this.state.instantSearchManager.updateIndex(this.props.indexName);\n      }\n\n      if (prevProps.searchClient !== this.props.searchClient) {\n        this.state.instantSearchManager.updateClient(this.props.searchClient);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.isUnmounting = true;\n      this.state.instantSearchManager.skipSearch();\n    }\n  }, {\n    key: \"createHrefForState\",\n    value: function createHrefForState(searchState) {\n      searchState = this.state.instantSearchManager.transitionState(searchState);\n      return this.state.isControlled && this.props.createURL ? this.props.createURL(searchState, this.getKnownKeys()) : '#';\n    }\n  }, {\n    key: \"onWidgetsInternalStateUpdate\",\n    value: function onWidgetsInternalStateUpdate(searchState) {\n      searchState = this.state.instantSearchManager.transitionState(searchState);\n      this.onSearchStateChange(searchState);\n\n      if (!this.state.isControlled) {\n        this.state.instantSearchManager.onExternalStateUpdate(searchState);\n      }\n    }\n  }, {\n    key: \"onSearchStateChange\",\n    value: function onSearchStateChange(searchState) {\n      if (this.props.onSearchStateChange && !this.isUnmounting) {\n        this.props.onSearchStateChange(searchState);\n      }\n    }\n  }, {\n    key: \"onSearchParameters\",\n    value: function onSearchParameters(getSearchParameters, context, props, getMetadata) {\n      if (this.props.onSearchParameters) {\n        var _searchState = this.props.searchState ? this.props.searchState : {};\n\n        this.props.onSearchParameters(getSearchParameters, context, props, _searchState);\n      }\n\n      if (this.props.widgetsCollector) {\n        var _searchState2 = this.props.searchState ? this.props.searchState : {};\n\n        this.props.widgetsCollector({\n          getSearchParameters: getSearchParameters,\n          getMetadata: getMetadata,\n          context: context,\n          props: props,\n          searchState: _searchState2\n        });\n      }\n    }\n  }, {\n    key: \"onSearchForFacetValues\",\n    value: function onSearchForFacetValues(searchState) {\n      this.state.instantSearchManager.onSearchForFacetValues(searchState);\n    }\n  }, {\n    key: \"getKnownKeys\",\n    value: function getKnownKeys() {\n      return this.state.instantSearchManager.getWidgetsIds();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (Children.count(this.props.children) === 0) {\n        return null;\n      }\n\n      return React.createElement(InstantSearchProvider, {\n        value: this.state.contextValue\n      }, this.props.children);\n    }\n  }]);\n\n  return InstantSearch;\n}(Component);\n\n_defineProperty(InstantSearch, \"defaultProps\", {\n  stalledSearchDelay: 200,\n  refresh: false\n});\n\n_defineProperty(InstantSearch, \"propTypes\", {\n  // @TODO: These props are currently constant.\n  indexName: PropTypes.string.isRequired,\n  searchClient: PropTypes.shape({\n    search: PropTypes.func.isRequired,\n    searchForFacetValues: PropTypes.func,\n    addAlgoliaAgent: PropTypes.func,\n    clearCache: PropTypes.func\n  }).isRequired,\n  createURL: PropTypes.func,\n  refresh: PropTypes.bool,\n  searchState: PropTypes.object,\n  onSearchStateChange: PropTypes.func,\n  onSearchParameters: PropTypes.func,\n  widgetsCollector: PropTypes.func,\n  resultsState: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  children: PropTypes.node,\n  stalledSearchDelay: PropTypes.number\n});\n\nexport default InstantSearch;","map":{"version":3,"sources":["C:/Users/Murtaza Jafari/Desktop/product-search/product/searcbox/node_modules/react-instantsearch-core/dist/es/widgets/InstantSearch.js"],"names":["_objectSpread","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","_assertThisInitialized","_createClass","_inherits","_defineProperty","React","Component","Children","isEqual","PropTypes","createInstantSearchManager","InstantSearchProvider","isControlled","props","Boolean","searchState","InstantSearch","_Component","key","value","getDerivedStateFromProps","nextProps","prevState","nextIsControlled","previousSearchState","instantSearchManager","store","getState","widgets","nextSearchState","onExternalStateUpdate","contextValue","mainTargetedIndex","indexName","_this","call","searchClient","initialState","resultsState","stalledSearchDelay","widgetsManager","onInternalStateUpdate","onWidgetsInternalStateUpdate","bind","createHrefForState","onSearchForFacetValues","onSearchStateChange","onSearchParameters","state","componentDidUpdate","prevProps","prevIsControlled","Error","refresh","clearCache","updateIndex","updateClient","componentWillUnmount","isUnmounting","skipSearch","transitionState","createURL","getKnownKeys","getSearchParameters","context","getMetadata","_searchState","widgetsCollector","_searchState2","getWidgetsIds","render","count","children","createElement","string","isRequired","shape","search","func","searchForFacetValues","addAlgoliaAgent","bool","object","oneOfType","array","node","number"],"mappings":"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","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { Component, Children } from 'react';\nimport isEqual from 'react-fast-compare';\nimport PropTypes from 'prop-types';\nimport createInstantSearchManager from '../core/createInstantSearchManager';\nimport { InstantSearchProvider } from '../core/context';\n\nfunction isControlled(props) {\n  return Boolean(props.searchState);\n}\n/**\n * @description\n * `<InstantSearch>` is the root component of all React InstantSearch implementations.\n * It provides all the connected components (aka widgets) a means to interact\n * with the searchState.\n * @kind widget\n * @name <InstantSearch>\n * @requirements You will need to have an Algolia account to be able to use this widget.\n * [Create one now](https://www.algolia.com/users/sign_up).\n * @propType {string} indexName - Main index in which to search.\n * @propType {boolean} [refresh=false] - Flag to activate when the cache needs to be cleared so that the front-end is updated when a change occurs in the index.\n * @propType {object} [searchClient] - Provide a custom search client.\n * @propType {func} [onSearchStateChange] - Function to be called everytime a new search is done. Useful for [URL Routing](guide/Routing.html).\n * @propType {object} [searchState] - Object to inject some search state. Switches the InstantSearch component in controlled mode. Useful for [URL Routing](guide/Routing.html).\n * @propType {func} [createURL] - Function to call when creating links, useful for [URL Routing](guide/Routing.html).\n * @propType {SearchResults|SearchResults[]} [resultsState] - Use this to inject the results that will be used at first rendering. Those results are found by using the `findResultsState` function. Useful for [Server Side Rendering](guide/Server-side_rendering.html).\n * @propType {number} [stalledSearchDelay=200] - The amount of time before considering that the search takes too much time. The time is expressed in milliseconds.\n * @propType {{ Root: string|function, props: object }} [root] - Use this to customize the root element. Default value: `{ Root: 'div' }`\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, SearchBox, Hits } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <SearchBox />\n *     <Hits />\n *   </InstantSearch>\n * );\n */\n\n\nvar InstantSearch =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(InstantSearch, _Component);\n\n  _createClass(InstantSearch, null, [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var nextIsControlled = isControlled(nextProps);\n      var previousSearchState = prevState.instantSearchManager.store.getState().widgets;\n      var nextSearchState = nextProps.searchState;\n\n      if (nextIsControlled && !isEqual(previousSearchState, nextSearchState)) {\n        prevState.instantSearchManager.onExternalStateUpdate(nextProps.searchState);\n      }\n\n      return {\n        isControlled: nextIsControlled,\n        contextValue: _objectSpread({}, prevState.contextValue, {\n          mainTargetedIndex: nextProps.indexName\n        })\n      };\n    }\n  }]);\n\n  function InstantSearch(props) {\n    var _this;\n\n    _classCallCheck(this, InstantSearch);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InstantSearch).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"isUnmounting\", false);\n\n    var instantSearchManager = createInstantSearchManager({\n      indexName: _this.props.indexName,\n      searchClient: _this.props.searchClient,\n      initialState: _this.props.searchState || {},\n      resultsState: _this.props.resultsState,\n      stalledSearchDelay: _this.props.stalledSearchDelay\n    });\n    var contextValue = {\n      store: instantSearchManager.store,\n      widgetsManager: instantSearchManager.widgetsManager,\n      mainTargetedIndex: _this.props.indexName,\n      onInternalStateUpdate: _this.onWidgetsInternalStateUpdate.bind(_assertThisInitialized(_this)),\n      createHrefForState: _this.createHrefForState.bind(_assertThisInitialized(_this)),\n      onSearchForFacetValues: _this.onSearchForFacetValues.bind(_assertThisInitialized(_this)),\n      onSearchStateChange: _this.onSearchStateChange.bind(_assertThisInitialized(_this)),\n      onSearchParameters: _this.onSearchParameters.bind(_assertThisInitialized(_this))\n    };\n    _this.state = {\n      isControlled: isControlled(_this.props),\n      instantSearchManager: instantSearchManager,\n      contextValue: contextValue\n    };\n    return _this;\n  }\n\n  _createClass(InstantSearch, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var prevIsControlled = isControlled(prevProps);\n\n      if (prevIsControlled && !this.state.isControlled) {\n        throw new Error(\"You can't switch <InstantSearch> from being controlled to uncontrolled\");\n      }\n\n      if (!prevIsControlled && this.state.isControlled) {\n        throw new Error(\"You can't switch <InstantSearch> from being uncontrolled to controlled\");\n      }\n\n      if (this.props.refresh !== prevProps.refresh && this.props.refresh) {\n        this.state.instantSearchManager.clearCache();\n      }\n\n      if (prevProps.indexName !== this.props.indexName) {\n        this.state.instantSearchManager.updateIndex(this.props.indexName);\n      }\n\n      if (prevProps.searchClient !== this.props.searchClient) {\n        this.state.instantSearchManager.updateClient(this.props.searchClient);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.isUnmounting = true;\n      this.state.instantSearchManager.skipSearch();\n    }\n  }, {\n    key: \"createHrefForState\",\n    value: function createHrefForState(searchState) {\n      searchState = this.state.instantSearchManager.transitionState(searchState);\n      return this.state.isControlled && this.props.createURL ? this.props.createURL(searchState, this.getKnownKeys()) : '#';\n    }\n  }, {\n    key: \"onWidgetsInternalStateUpdate\",\n    value: function onWidgetsInternalStateUpdate(searchState) {\n      searchState = this.state.instantSearchManager.transitionState(searchState);\n      this.onSearchStateChange(searchState);\n\n      if (!this.state.isControlled) {\n        this.state.instantSearchManager.onExternalStateUpdate(searchState);\n      }\n    }\n  }, {\n    key: \"onSearchStateChange\",\n    value: function onSearchStateChange(searchState) {\n      if (this.props.onSearchStateChange && !this.isUnmounting) {\n        this.props.onSearchStateChange(searchState);\n      }\n    }\n  }, {\n    key: \"onSearchParameters\",\n    value: function onSearchParameters(getSearchParameters, context, props, getMetadata) {\n      if (this.props.onSearchParameters) {\n        var _searchState = this.props.searchState ? this.props.searchState : {};\n\n        this.props.onSearchParameters(getSearchParameters, context, props, _searchState);\n      }\n\n      if (this.props.widgetsCollector) {\n        var _searchState2 = this.props.searchState ? this.props.searchState : {};\n\n        this.props.widgetsCollector({\n          getSearchParameters: getSearchParameters,\n          getMetadata: getMetadata,\n          context: context,\n          props: props,\n          searchState: _searchState2\n        });\n      }\n    }\n  }, {\n    key: \"onSearchForFacetValues\",\n    value: function onSearchForFacetValues(searchState) {\n      this.state.instantSearchManager.onSearchForFacetValues(searchState);\n    }\n  }, {\n    key: \"getKnownKeys\",\n    value: function getKnownKeys() {\n      return this.state.instantSearchManager.getWidgetsIds();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (Children.count(this.props.children) === 0) {\n        return null;\n      }\n\n      return React.createElement(InstantSearchProvider, {\n        value: this.state.contextValue\n      }, this.props.children);\n    }\n  }]);\n\n  return InstantSearch;\n}(Component);\n\n_defineProperty(InstantSearch, \"defaultProps\", {\n  stalledSearchDelay: 200,\n  refresh: false\n});\n\n_defineProperty(InstantSearch, \"propTypes\", {\n  // @TODO: These props are currently constant.\n  indexName: PropTypes.string.isRequired,\n  searchClient: PropTypes.shape({\n    search: PropTypes.func.isRequired,\n    searchForFacetValues: PropTypes.func,\n    addAlgoliaAgent: PropTypes.func,\n    clearCache: PropTypes.func\n  }).isRequired,\n  createURL: PropTypes.func,\n  refresh: PropTypes.bool,\n  searchState: PropTypes.object,\n  onSearchStateChange: PropTypes.func,\n  onSearchParameters: PropTypes.func,\n  widgetsCollector: PropTypes.func,\n  resultsState: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  children: PropTypes.node,\n  stalledSearchDelay: PropTypes.number\n});\n\nexport default InstantSearch;"]},"metadata":{},"sourceType":"module"}