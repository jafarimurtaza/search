{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport createConnector from '../core/createConnector';\nimport { cleanUpValue, refineValue, getCurrentRefinementValue, getResults } from '../core/indexUtils';\n\nfunction getId() {\n  return 'page';\n}\n\nfunction getCurrentRefinement(props, searchState, context) {\n  var id = getId();\n  var page = 1;\n  var currentRefinement = getCurrentRefinementValue(props, searchState, context, id, page);\n\n  if (typeof currentRefinement === 'string') {\n    return parseInt(currentRefinement, 10);\n  }\n\n  return currentRefinement;\n}\n\nfunction _refine(props, searchState, nextPage, context) {\n  var id = getId();\n\n  var nextValue = _defineProperty({}, id, nextPage);\n\n  var resetPage = false;\n  return refineValue(searchState, nextValue, context, resetPage);\n}\n/**\n * connectPagination connector provides the logic to build a widget that will\n * let the user displays hits corresponding to a certain page.\n * @name connectPagination\n * @kind connector\n * @propType {boolean} [showFirst=true] - Display the first page link.\n * @propType {boolean} [showLast=false] - Display the last page link.\n * @propType {boolean} [showPrevious=true] - Display the previous page link.\n * @propType {boolean} [showNext=true] - Display the next page link.\n * @propType {number} [padding=3] - How many page links to display around the current page.\n * @propType {number} [totalPages=Infinity] - Maximum number of pages to display.\n * @providedPropType {function} refine - a function to remove a single filter\n * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state\n * @providedPropType {number} nbPages - the total of existing pages\n * @providedPropType {number} currentRefinement - the page refinement currently applied\n */\n\n\nexport default createConnector({\n  displayName: 'AlgoliaPagination',\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    var results = getResults(searchResults, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n\n    if (!results) {\n      return null;\n    }\n\n    var nbPages = results.nbPages;\n    return {\n      nbPages: nbPages,\n      currentRefinement: getCurrentRefinement(props, searchState, {\n        ais: props.contextValue,\n        multiIndexContext: props.indexContextValue\n      }),\n      canRefine: nbPages > 1\n    };\n  },\n  refine: function refine(props, searchState, nextPage) {\n    return _refine(props, searchState, nextPage, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n  },\n  cleanUp: function cleanUp(props, searchState) {\n    return cleanUpValue(searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    }, getId());\n  },\n  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {\n    return searchParameters.setPage(getCurrentRefinement(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    }) - 1);\n  },\n  getMetadata: function getMetadata() {\n    return {\n      id: getId()\n    };\n  }\n});","map":{"version":3,"sources":["C:/Users/Murtaza Jafari/Desktop/product-search/product/searcbox/node_modules/react-instantsearch-core/dist/es/connectors/connectPagination.js"],"names":["_defineProperty","createConnector","cleanUpValue","refineValue","getCurrentRefinementValue","getResults","getId","getCurrentRefinement","props","searchState","context","id","page","currentRefinement","parseInt","_refine","nextPage","nextValue","resetPage","displayName","getProvidedProps","searchResults","results","ais","contextValue","multiIndexContext","indexContextValue","nbPages","canRefine","refine","cleanUp","getSearchParameters","searchParameters","setPage","getMetadata"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport createConnector from '../core/createConnector';\nimport { cleanUpValue, refineValue, getCurrentRefinementValue, getResults } from '../core/indexUtils';\n\nfunction getId() {\n  return 'page';\n}\n\nfunction getCurrentRefinement(props, searchState, context) {\n  var id = getId();\n  var page = 1;\n  var currentRefinement = getCurrentRefinementValue(props, searchState, context, id, page);\n\n  if (typeof currentRefinement === 'string') {\n    return parseInt(currentRefinement, 10);\n  }\n\n  return currentRefinement;\n}\n\nfunction _refine(props, searchState, nextPage, context) {\n  var id = getId();\n\n  var nextValue = _defineProperty({}, id, nextPage);\n\n  var resetPage = false;\n  return refineValue(searchState, nextValue, context, resetPage);\n}\n/**\n * connectPagination connector provides the logic to build a widget that will\n * let the user displays hits corresponding to a certain page.\n * @name connectPagination\n * @kind connector\n * @propType {boolean} [showFirst=true] - Display the first page link.\n * @propType {boolean} [showLast=false] - Display the last page link.\n * @propType {boolean} [showPrevious=true] - Display the previous page link.\n * @propType {boolean} [showNext=true] - Display the next page link.\n * @propType {number} [padding=3] - How many page links to display around the current page.\n * @propType {number} [totalPages=Infinity] - Maximum number of pages to display.\n * @providedPropType {function} refine - a function to remove a single filter\n * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state\n * @providedPropType {number} nbPages - the total of existing pages\n * @providedPropType {number} currentRefinement - the page refinement currently applied\n */\n\n\nexport default createConnector({\n  displayName: 'AlgoliaPagination',\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    var results = getResults(searchResults, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n\n    if (!results) {\n      return null;\n    }\n\n    var nbPages = results.nbPages;\n    return {\n      nbPages: nbPages,\n      currentRefinement: getCurrentRefinement(props, searchState, {\n        ais: props.contextValue,\n        multiIndexContext: props.indexContextValue\n      }),\n      canRefine: nbPages > 1\n    };\n  },\n  refine: function refine(props, searchState, nextPage) {\n    return _refine(props, searchState, nextPage, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n  },\n  cleanUp: function cleanUp(props, searchState) {\n    return cleanUpValue(searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    }, getId());\n  },\n  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {\n    return searchParameters.setPage(getCurrentRefinement(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    }) - 1);\n  },\n  getMetadata: function getMetadata() {\n    return {\n      id: getId()\n    };\n  }\n});"]},"metadata":{},"sourceType":"module"}