{"ast":null,"code":"import React, { Component, PureComponent, isValidElement } from 'react';\nimport warning from 'warning';\nimport { ticks } from 'd3-array';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar prfx = 'react-compound-slider:';\n\nfunction getSortByVal() {\n  var reversed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  return function sortByVal(a, b) {\n    if (a.val > b.val) {\n      return reversed ? -1 : 1;\n    }\n\n    if (b.val > a.val) {\n      return reversed ? 1 : -1;\n    }\n\n    return 0;\n  };\n}\n\nfunction getUpdatedHandles(handles, updateKey, updateValue) {\n  var reversed = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var index = handles.findIndex(function (v) {\n    return v.key === updateKey;\n  });\n\n  if (index !== -1) {\n    var _handles$index = handles[index],\n        key = _handles$index.key,\n        val = _handles$index.val;\n\n    if (val === updateValue) {\n      return handles;\n    }\n\n    return [].concat(_toConsumableArray(handles.slice(0, index)), [{\n      key: key,\n      val: updateValue\n    }], _toConsumableArray(handles.slice(index + 1))).sort(getSortByVal(reversed));\n  }\n\n  return handles;\n}\n\nfunction getSliderDomain(slider, vertical) {\n  if (!slider) {\n    return [0, 0];\n  }\n\n  var s = slider.getBoundingClientRect();\n  var d0 = vertical ? s.top : s.left;\n  var d1 = vertical ? s.bottom : s.right;\n  return [d0, d1];\n}\n\nfunction isNotValidTouch(_ref) {\n  var _ref$type = _ref.type,\n      type = _ref$type === void 0 ? '' : _ref$type,\n      touches = _ref.touches;\n  return !touches || touches.length > 1 || type.toLowerCase() === 'touchend' && touches.length > 0;\n}\n\nfunction getTouchPosition(vertical, e) {\n  return vertical ? e.touches[0].clientY : e.touches[0].pageX;\n}\n\nfunction getHandles() {\n  var values = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var reversed = arguments.length > 1 ? arguments[1] : undefined;\n  var valueToStep = arguments.length > 2 ? arguments[2] : undefined;\n  var warn = arguments.length > 3 ? arguments[3] : undefined;\n  var changes = 0;\n  var handles = values.map(function (x) {\n    var val = valueToStep.getValue(x);\n\n    if (x !== val) {\n      changes += 1;\n      warning(!warn, \"\".concat(prfx, \" Invalid value encountered. Changing \").concat(x, \" to \").concat(val, \".\"));\n    }\n\n    return val;\n  }).map(function (val, i) {\n    return {\n      key: \"$$-\".concat(i),\n      val: val\n    };\n  }).sort(getSortByVal(reversed));\n  return {\n    handles: handles,\n    changes: changes\n  };\n} // default mode\n\n\nfunction mode1(_, next) {\n  return next;\n} // prevent duplicate values and crossing\n\n\nfunction mode2(curr, next) {\n  for (var i = 0; i < curr.length; i++) {\n    if (curr[i].key !== next[i].key) {\n      return curr;\n    }\n\n    if (next[i + 1] && next[i].val === next[i + 1].val) {\n      return curr;\n    }\n  }\n\n  return next;\n} // pushable mode\n\n\nfunction mode3(curr, next, step, reversed, getValue) {\n  var indexForMovingHandle = -1;\n  var handleMoveIsPositive = true;\n\n  for (var i = 0; i < curr.length; i++) {\n    var c = curr[i];\n    var n = next[i]; // make sure keys are in same order if not return curr\n\n    if (!n || n.key !== c.key) {\n      return curr;\n    } else if (n.val !== c.val) {\n      indexForMovingHandle = i;\n      handleMoveIsPositive = n.val - c.val > 0;\n    }\n  } // nothing has changed (shouldn't happen but just in case).\n\n\n  if (indexForMovingHandle === -1) {\n    return curr;\n  } else {\n    var increment = handleMoveIsPositive ? step : -step;\n\n    for (var _i = 0; _i < next.length; _i++) {\n      var n0 = next[_i];\n      var n1 = next[_i + 1];\n\n      if (n1 && n0.val === n1.val) {\n        if (_i === indexForMovingHandle) {\n          var newStep = n1.val + increment;\n\n          if (getValue(newStep) === newStep) {\n            var clone = getUpdatedHandles(next, n1.key, n1.val + increment, reversed);\n            var check = mode3(next, clone, step, reversed, getValue);\n\n            if (check === next) {\n              return curr;\n            } else {\n              return check;\n            }\n          } else {\n            return curr;\n          }\n        } else {\n          var _newStep = n0.val + increment;\n\n          if (getValue(_newStep) === _newStep) {\n            var _clone = getUpdatedHandles(next, n0.key, n0.val + increment, reversed);\n\n            var _check = mode3(next, _clone, step, reversed, getValue);\n\n            if (_check === next) {\n              return curr;\n            } else {\n              return _check;\n            }\n          } else {\n            return curr;\n          }\n        }\n      }\n    }\n  }\n\n  return next;\n}\n\nfunction callAll() {\n  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {\n    fns[_key] = arguments[_key];\n  }\n\n  return function (e) {\n    return fns.forEach(function (fn) {\n      return fn && fn(e);\n    });\n  };\n}\n\nvar NOOP = function NOOP() {\n  return {\n    value: 0,\n    percent: 0\n  };\n};\n\nvar Rail = /*#__PURE__*/function (_Component) {\n  _inherits(Rail, _Component);\n\n  var _super = _createSuper(Rail);\n\n  function Rail() {\n    var _this;\n\n    _classCallCheck(this, Rail);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.getRailProps = function () {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _this$props = _this.props,\n          emitMouse = _this$props.emitMouse,\n          emitTouch = _this$props.emitTouch;\n      return _objectSpread2(_objectSpread2({}, props), {}, {\n        onMouseDown: callAll(props && props.onMouseDown, emitMouse),\n        onTouchStart: callAll(props && props.onTouchStart, emitTouch)\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Rail, [{\n    key: \"render\",\n    value: function render() {\n      var getRailProps = this.getRailProps,\n          _this$props2 = this.props,\n          getEventData = _this$props2.getEventData,\n          _this$props2$activeHa = _this$props2.activeHandleID,\n          activeHandleID = _this$props2$activeHa === void 0 ? '' : _this$props2$activeHa,\n          children = _this$props2.children;\n      var renderedChildren = children({\n        getEventData: getEventData || NOOP,\n        activeHandleID: activeHandleID,\n        getRailProps: getRailProps\n      });\n      return renderedChildren && React.Children.only(renderedChildren);\n    }\n  }]);\n\n  return Rail;\n}(Component);\n\nvar Handles = /*#__PURE__*/function (_Component) {\n  _inherits(Handles, _Component);\n\n  var _super = _createSuper(Handles);\n\n  function Handles() {\n    var _this;\n\n    _classCallCheck(this, Handles);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.autofocus = function (e) {\n      if (e.target instanceof HTMLElement) {\n        e.target.focus();\n      }\n    };\n\n    _this.getHandleProps = function (id) {\n      var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var _this$props = _this.props,\n          emitKeyboard = _this$props.emitKeyboard,\n          emitMouse = _this$props.emitMouse,\n          emitTouch = _this$props.emitTouch;\n      return _objectSpread2(_objectSpread2({}, props), {}, {\n        onKeyDown: callAll(props && props.onKeyDown, function (e) {\n          return emitKeyboard && emitKeyboard(e, id);\n        }),\n        onMouseDown: callAll(props && props.onMouseDown, _this.autofocus, function (e) {\n          return emitMouse && emitMouse(e, id);\n        }),\n        onTouchStart: callAll(props && props.onTouchStart, function (e) {\n          return emitTouch && emitTouch(e, id);\n        })\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Handles, [{\n    key: \"render\",\n    value: function render() {\n      var getHandleProps = this.getHandleProps,\n          _this$props2 = this.props,\n          _this$props2$activeHa = _this$props2.activeHandleID,\n          activeHandleID = _this$props2$activeHa === void 0 ? '' : _this$props2$activeHa,\n          children = _this$props2.children,\n          _this$props2$handles = _this$props2.handles,\n          handles = _this$props2$handles === void 0 ? [] : _this$props2$handles;\n      var renderedChildren = children({\n        handles: handles,\n        activeHandleID: activeHandleID,\n        getHandleProps: getHandleProps\n      });\n      return renderedChildren && React.Children.only(renderedChildren);\n    }\n  }]);\n\n  return Handles;\n}(Component);\n\nvar LinearScale = /*#__PURE__*/function () {\n  function LinearScale() {\n    _classCallCheck(this, LinearScale);\n\n    this.interpolator = void 0;\n    this.domain = [0, 1];\n    this.range = [0, 1];\n    this.domain = [0, 1];\n    this.range = [0, 1];\n    this.interpolator = null;\n  }\n\n  _createClass(LinearScale, [{\n    key: \"createInterpolator\",\n    value: function createInterpolator(domain, range) {\n      var _this = this;\n\n      var d0 = domain[0];\n      var d1 = domain[1];\n      var r0 = range[0];\n      var r1 = range[1];\n\n      if (d1 < d0) {\n        return function (x) {\n          return _this.interpolateValue(r1, r0)(_this.deinterpolateValue(d1, d0)(x));\n        };\n      } else {\n        return function (x) {\n          return _this.interpolateValue(r0, r1)(_this.deinterpolateValue(d0, d1)(x));\n        };\n      }\n    }\n  }, {\n    key: \"interpolateValue\",\n    value: function interpolateValue(a, b) {\n      return a = +a, b -= a, function i(t) {\n        return a + b * t;\n      };\n    }\n  }, {\n    key: \"deinterpolateValue\",\n    value: function deinterpolateValue(a, b) {\n      return (b -= a = +a) ? function (x) {\n        return (x - a) / b;\n      } : function () {\n        return b;\n      };\n    }\n  }, {\n    key: \"rescale\",\n    value: function rescale() {\n      this.interpolator = null;\n      return this;\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue(x) {\n      var domain = this.domain,\n          range = this.range;\n      return (this.interpolator || (this.interpolator = this.createInterpolator(domain, range)))(+x);\n    }\n  }, {\n    key: \"setDomain\",\n    value: function setDomain(val) {\n      this.domain = [val[0], val[1]];\n      this.rescale();\n      return this;\n    }\n  }, {\n    key: \"getDomain\",\n    value: function getDomain() {\n      return this.domain;\n    }\n  }, {\n    key: \"setRange\",\n    value: function setRange(val) {\n      this.range = [val[0], val[1]];\n      return this;\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange() {\n      return this.range;\n    }\n  }, {\n    key: \"getTicks\",\n    value: function getTicks(count) {\n      var d = this.domain;\n      return ticks(d[0], d[d.length - 1], count ? count : 10);\n    }\n  }]);\n\n  return LinearScale;\n}();\n\nvar defaultGetEventData = function defaultGetEventData() {\n  return {\n    value: 0,\n    percent: 0\n  };\n};\n\nvar Ticks = /*#__PURE__*/function (_Component) {\n  _inherits(Ticks, _Component);\n\n  var _super = _createSuper(Ticks);\n\n  function Ticks() {\n    _classCallCheck(this, Ticks);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Ticks, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          values = _this$props.values,\n          _this$props$scale = _this$props.scale,\n          scale = _this$props$scale === void 0 ? new LinearScale() : _this$props$scale,\n          _this$props$count = _this$props.count,\n          count = _this$props$count === void 0 ? 10 : _this$props$count,\n          _this$props$getEventD = _this$props.getEventData,\n          getEventData = _this$props$getEventD === void 0 ? defaultGetEventData : _this$props$getEventD,\n          _this$props$activeHan = _this$props.activeHandleID,\n          activeHandleID = _this$props$activeHan === void 0 ? '' : _this$props$activeHan;\n      var ticks = (values ? values : scale.getTicks(count)).map(function (value) {\n        return {\n          id: \"$$-\".concat(value),\n          value: value,\n          percent: scale.getValue(value)\n        };\n      });\n      var renderedChildren = children({\n        getEventData: getEventData,\n        activeHandleID: activeHandleID,\n        ticks: ticks\n      });\n      return renderedChildren && React.Children.only(renderedChildren);\n    }\n  }]);\n\n  return Ticks;\n}(Component);\n\nvar defaultGetEventData$1 = function defaultGetEventData() {\n  return {\n    value: 0,\n    percent: 0\n  };\n};\n\nvar Tracks = /*#__PURE__*/function (_Component) {\n  _inherits(Tracks, _Component);\n\n  var _super = _createSuper(Tracks);\n\n  function Tracks() {\n    var _this;\n\n    _classCallCheck(this, Tracks);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.getTrackProps = function (props) {\n      var _this$props = _this.props,\n          emitMouse = _this$props.emitMouse,\n          emitTouch = _this$props.emitTouch;\n      return _objectSpread2(_objectSpread2({}, props || {}), {}, {\n        onMouseDown: callAll(props && props.onMouseDown, emitMouse),\n        onTouchStart: callAll(props && props.onTouchStart, emitTouch)\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Tracks, [{\n    key: \"render\",\n    value: function render() {\n      var getTrackProps = this.getTrackProps,\n          _this$props2 = this.props,\n          children = _this$props2.children,\n          _this$props2$left = _this$props2.left,\n          left = _this$props2$left === void 0 ? true : _this$props2$left,\n          _this$props2$right = _this$props2.right,\n          right = _this$props2$right === void 0 ? true : _this$props2$right,\n          _this$props2$scale = _this$props2.scale,\n          scale = _this$props2$scale === void 0 ? new LinearScale() : _this$props2$scale,\n          _this$props2$handles = _this$props2.handles,\n          handles = _this$props2$handles === void 0 ? [] : _this$props2$handles,\n          _this$props2$getEvent = _this$props2.getEventData,\n          getEventData = _this$props2$getEvent === void 0 ? defaultGetEventData$1 : _this$props2$getEvent,\n          _this$props2$activeHa = _this$props2.activeHandleID,\n          activeHandleID = _this$props2$activeHa === void 0 ? '' : _this$props2$activeHa;\n      var domain = scale.getDomain();\n      var tracks = [];\n\n      for (var i = 0; i < handles.length + 1; i++) {\n        var source = handles[i - 1];\n        var target = handles[i];\n\n        if (i === 0 && left === true) {\n          source = {\n            id: '$',\n            value: domain[0],\n            percent: 0\n          };\n        } else if (i === handles.length && right === true) {\n          target = {\n            id: '$',\n            value: domain[1],\n            percent: 100\n          };\n        }\n\n        if (source && target) {\n          tracks.push({\n            id: \"\".concat(source.id, \"-\").concat(target.id),\n            source: source,\n            target: target\n          });\n        }\n      }\n\n      var renderedChildren = children({\n        getEventData: getEventData,\n        activeHandleID: activeHandleID,\n        tracks: tracks,\n        getTrackProps: getTrackProps\n      });\n      return renderedChildren && React.Children.only(renderedChildren);\n    }\n  }]);\n\n  return Tracks;\n}(Component);\n\nfunction clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\nvar DiscreteScale = function DiscreteScale() {\n  var _this = this;\n\n  _classCallCheck(this, DiscreteScale);\n\n  this.step = 1;\n  this.domain = [0, 1];\n  this.range = [0, 1];\n\n  this.setDomain = function (val) {\n    _this.domain = [val[0], val[1]];\n    return _this;\n  };\n\n  this.setRange = function (val) {\n    _this.range = [val[0], val[1]];\n    return _this;\n  };\n\n  this.setStep = function (val) {\n    _this.step = val;\n    return _this;\n  };\n\n  this.getValue = function (x) {\n    var _this$domain = _slicedToArray(_this.domain, 2),\n        d0 = _this$domain[0],\n        d1 = _this$domain[1],\n        _this$range = _slicedToArray(_this.range, 2),\n        r0 = _this$range[0],\n        r1 = _this$range[1],\n        step = _this.step;\n\n    var p = (clamp(x, d0, d1) - d0) / (d1 - d0);\n    var b = step * Math.round(p * (r1 - r0) / step) + r0;\n    return clamp(b, r0 < r1 ? r0 : r1, r1 > r0 ? r1 : r0);\n  };\n};\n\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nvar noop = function noop() {};\n\nvar compare = function compare(b) {\n  return function (m, d, i) {\n    return m && b[i] === d;\n  };\n};\n\nvar equal = function equal(a, b) {\n  return a === b || a.length === b.length && a.reduce(compare(b), true);\n};\n\nvar isRCSComponent = function isRCSComponent(item) {\n  if (! /*#__PURE__*/isValidElement(item)) {\n    return false;\n  }\n\n  var type = item.type;\n  var name = type ? type.name : '';\n  return name === Handles.name || name === Rail.name || name === Ticks.name || name === Tracks.name;\n};\n\nvar getNextValue = function getNextValue(curr, step, domain, reversed) {\n  var newVal = reversed ? curr - step : curr + step;\n  return reversed ? Math.max(domain[0], newVal) : Math.min(domain[1], newVal);\n};\n\nvar getPrevValue = function getPrevValue(curr, step, domain, reversed) {\n  var newVal = reversed ? curr + step : curr - step;\n  return reversed ? Math.min(domain[1], newVal) : Math.max(domain[0], newVal);\n};\n\nvar defaultDomain = [0, 100];\n\nvar Slider = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Slider, _PureComponent);\n\n  var _super = _createSuper(Slider);\n\n  function Slider() {\n    var _this;\n\n    _classCallCheck(this, Slider);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      step: 0.1,\n      values: [],\n      domain: defaultDomain,\n      handles: [],\n      reversed: false,\n      activeHandleID: '',\n      valueToPerc: null,\n      valueToStep: null,\n      pixelToStep: null\n    };\n    _this.slider = /*#__PURE__*/React.createRef();\n\n    _this.onKeyDown = function (e, handleID) {\n      var validUpKeys = ['ArrowRight', 'ArrowUp'];\n      var validDownKeys = ['ArrowDown', 'ArrowLeft'];\n\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          handles = _assertThisInitialize.state.handles,\n          _assertThisInitialize2 = _assertThisInitialize.props,\n          _assertThisInitialize3 = _assertThisInitialize2.step,\n          step = _assertThisInitialize3 === void 0 ? 0.1 : _assertThisInitialize3,\n          _assertThisInitialize4 = _assertThisInitialize2.reversed,\n          reversed = _assertThisInitialize4 === void 0 ? false : _assertThisInitialize4,\n          _assertThisInitialize5 = _assertThisInitialize2.vertical,\n          vertical = _assertThisInitialize5 === void 0 ? false : _assertThisInitialize5,\n          _assertThisInitialize6 = _assertThisInitialize2.domain,\n          domain = _assertThisInitialize6 === void 0 ? [0, 100] : _assertThisInitialize6;\n\n      var key = e.key || \"\".concat(e.keyCode);\n\n      if (!validUpKeys.concat(validDownKeys).includes(key)) {\n        return;\n      }\n\n      if (vertical) {\n        var _ref = [validDownKeys, validUpKeys];\n        validUpKeys = _ref[0];\n        validDownKeys = _ref[1];\n      }\n\n      e.stopPropagation && e.stopPropagation();\n      e.preventDefault && e.preventDefault();\n      var found = handles.find(function (value) {\n        return value.key === handleID;\n      });\n\n      if (!found) {\n        return;\n      }\n\n      var currVal = found.val;\n      var newVal = currVal;\n\n      if (validUpKeys.includes(key)) {\n        newVal = getNextValue(currVal, step, domain, reversed);\n      } else if (validDownKeys.includes(key)) {\n        newVal = getPrevValue(currVal, step, domain, reversed);\n      }\n\n      var nextHandles = handles.map(function (v) {\n        return v.key === handleID ? {\n          key: v.key,\n          val: newVal\n        } : v;\n      });\n\n      _this.submitUpdate(nextHandles, true);\n    };\n\n    _this.onMouseDown = function (e, handleID) {\n      _this.onStart(e, handleID, false);\n    };\n\n    _this.onTouchStart = function (e, handleID) {\n      if (isNotValidTouch(e)) {\n        return;\n      }\n\n      _this.onStart(e, handleID, true);\n    };\n\n    _this.getEventData = function (e, isTouch) {\n      var _assertThisInitialize7 = _assertThisInitialized(_this),\n          _assertThisInitialize8 = _assertThisInitialize7.state,\n          pixelToStep = _assertThisInitialize8.pixelToStep,\n          valueToPerc = _assertThisInitialize8.valueToPerc,\n          vertical = _assertThisInitialize7.props.vertical; // double check the dimensions of the slider\n      // @ts-ignore\n\n\n      pixelToStep.setDomain(getSliderDomain(_this.slider.current, vertical));\n      var value;\n\n      if (isTouch && e instanceof TouchEvent) {\n        // @ts-ignore\n        value = pixelToStep.getValue(getTouchPosition(vertical, e));\n      } else if (e instanceof MouseEvent) {\n        // @ts-ignore\n        value = pixelToStep.getValue(vertical ? e.clientY : e.pageX);\n      }\n\n      return {\n        value: value,\n        // @ts-ignore\n        percent: valueToPerc.getValue(value)\n      };\n    };\n\n    _this.onMouseMove = function (e) {\n      var _assertThisInitialize9 = _assertThisInitialized(_this),\n          _assertThisInitialize10 = _assertThisInitialize9.state,\n          curr = _assertThisInitialize10.handles,\n          pixelToStep = _assertThisInitialize10.pixelToStep,\n          _assertThisInitialize11 = _assertThisInitialize10.activeHandleID,\n          activeHandleID = _assertThisInitialize11 === void 0 ? '' : _assertThisInitialize11,\n          _assertThisInitialize12 = _assertThisInitialize9.props,\n          vertical = _assertThisInitialize12.vertical,\n          _assertThisInitialize13 = _assertThisInitialize12.reversed,\n          reversed = _assertThisInitialize13 === void 0 ? false : _assertThisInitialize13; // double check the dimensions of the slider\n      // @ts-ignore\n\n\n      pixelToStep.setDomain(getSliderDomain(_this.slider.current, vertical)); // find the closest value (aka step) to the event location\n      // @ts-ignore\n\n      var updateValue = pixelToStep.getValue(vertical ? e.clientY : e.pageX); // generate a \"candidate\" set of values - a suggestion of what to do\n\n      var nextHandles = getUpdatedHandles(curr, activeHandleID, updateValue, reversed); // submit the candidate values\n\n      _this.submitUpdate(nextHandles);\n    };\n\n    _this.onTouchMove = function (e) {\n      var _assertThisInitialize14 = _assertThisInitialized(_this),\n          _assertThisInitialize15 = _assertThisInitialize14.state,\n          curr = _assertThisInitialize15.handles,\n          pixelToStep = _assertThisInitialize15.pixelToStep,\n          activeHandleID = _assertThisInitialize15.activeHandleID,\n          _assertThisInitialize16 = _assertThisInitialize14.props,\n          vertical = _assertThisInitialize16.vertical,\n          reversed = _assertThisInitialize16.reversed;\n\n      if (pixelToStep === null || isNotValidTouch(e)) {\n        return;\n      } // double check the dimensions of the slider\n      // @ts-ignore\n\n\n      pixelToStep.setDomain(getSliderDomain(_this.slider.current, vertical)); // find the closest value (aka step) to the event location\n      // @ts-ignore\n\n      var updateValue = pixelToStep.getValue(getTouchPosition(vertical, e)); // generate a \"candidate\" set of values - a suggestion of what to do\n\n      var nextHandles = getUpdatedHandles(curr, activeHandleID, updateValue, reversed); // submit the candidate values\n\n      _this.submitUpdate(nextHandles);\n    };\n\n    _this.onMouseUp = function () {\n      var _assertThisInitialize17 = _assertThisInitialized(_this),\n          _assertThisInitialize18 = _assertThisInitialize17.state,\n          _assertThisInitialize19 = _assertThisInitialize18.handles,\n          handles = _assertThisInitialize19 === void 0 ? [] : _assertThisInitialize19,\n          activeHandleID = _assertThisInitialize18.activeHandleID,\n          _assertThisInitialize20 = _assertThisInitialize17.props,\n          _assertThisInitialize21 = _assertThisInitialize20.onChange,\n          onChange = _assertThisInitialize21 === void 0 ? noop : _assertThisInitialize21,\n          _assertThisInitialize22 = _assertThisInitialize20.onSlideEnd,\n          onSlideEnd = _assertThisInitialize22 === void 0 ? noop : _assertThisInitialize22;\n\n      onChange(handles.map(function (d) {\n        return d.val;\n      }));\n      onSlideEnd(handles.map(function (d) {\n        return d.val;\n      }), {\n        activeHandleID: activeHandleID\n      });\n\n      _this.setState({\n        activeHandleID: ''\n      });\n\n      if (isBrowser) {\n        document.removeEventListener('mousemove', _this.onMouseMove);\n        document.removeEventListener('mouseup', _this.onMouseUp);\n      }\n    };\n\n    _this.onTouchEnd = function () {\n      var _assertThisInitialize23 = _assertThisInitialized(_this),\n          _assertThisInitialize24 = _assertThisInitialize23.state,\n          handles = _assertThisInitialize24.handles,\n          activeHandleID = _assertThisInitialize24.activeHandleID,\n          _assertThisInitialize25 = _assertThisInitialize23.props,\n          _assertThisInitialize26 = _assertThisInitialize25.onChange,\n          onChange = _assertThisInitialize26 === void 0 ? noop : _assertThisInitialize26,\n          _assertThisInitialize27 = _assertThisInitialize25.onSlideEnd,\n          onSlideEnd = _assertThisInitialize27 === void 0 ? noop : _assertThisInitialize27;\n\n      onChange(handles.map(function (d) {\n        return d.val;\n      }));\n      onSlideEnd(handles.map(function (d) {\n        return d.val;\n      }), {\n        activeHandleID: activeHandleID\n      });\n\n      _this.setState({\n        activeHandleID: ''\n      });\n\n      if (isBrowser) {\n        document.removeEventListener('touchmove', _this.onTouchMove);\n        document.removeEventListener('touchend', _this.onTouchEnd);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Slider, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var pixelToStep = this.state.pixelToStep;\n      var vertical = this.props.vertical; // @ts-ignore\n\n      pixelToStep.setDomain(getSliderDomain(this.slider.current, vertical));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.removeListeners();\n    }\n  }, {\n    key: \"removeListeners\",\n    value: function removeListeners() {\n      if (isBrowser) {\n        document.removeEventListener('mousemove', this.onMouseMove);\n        document.removeEventListener('mouseup', this.onMouseUp);\n        document.removeEventListener('touchmove', this.onTouchMove);\n        document.removeEventListener('touchend', this.onTouchEnd);\n      }\n    }\n  }, {\n    key: \"onStart\",\n    value: function onStart(e, handleID, isTouch) {\n      var handles = this.state.handles,\n          _this$props$onSlideSt = this.props.onSlideStart,\n          onSlideStart = _this$props$onSlideSt === void 0 ? noop : _this$props$onSlideSt;\n\n      if (!isTouch) {\n        e.preventDefault && e.preventDefault();\n      }\n\n      e.stopPropagation && e.stopPropagation();\n      var found = handles.find(function (value) {\n        return value.key === handleID;\n      });\n\n      if (found) {\n        this.setState({\n          activeHandleID: handleID\n        });\n        onSlideStart(handles.map(function (d) {\n          return d.val;\n        }), {\n          activeHandleID: handleID\n        });\n        isTouch ? this.addTouchEvents() : this.addMouseEvents();\n      } else {\n        this.setState({\n          activeHandleID: ''\n        });\n        this.handleRailAndTrackClicks(e, isTouch);\n      }\n    }\n  }, {\n    key: \"handleRailAndTrackClicks\",\n    value: function handleRailAndTrackClicks(e, isTouch) {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          curr = _this$state.handles,\n          pixelToStep = _this$state.pixelToStep,\n          _this$props = this.props,\n          vertical = _this$props.vertical,\n          _this$props$reversed = _this$props.reversed,\n          reversed = _this$props$reversed === void 0 ? false : _this$props$reversed;\n      var slider = this.slider; // double check the dimensions of the slider\n      // @ts-ignore\n\n      pixelToStep.setDomain(getSliderDomain(slider.current, vertical)); // find the closest value (aka step) to the event location\n\n      var updateValue;\n\n      if (isTouch) {\n        // @ts-ignore\n        updateValue = pixelToStep.getValue(getTouchPosition(vertical, e));\n      } else {\n        // @ts-ignore\n        updateValue = pixelToStep.getValue(vertical ? e.clientY : e.pageX);\n      } // find the closest handle key\n\n\n      var updateKey = '';\n      var minDiff = Infinity;\n\n      for (var i = 0; i < curr.length; i++) {\n        var _curr$i = curr[i],\n            key = _curr$i.key,\n            val = _curr$i.val;\n        var diff = Math.abs(val - updateValue);\n\n        if (diff < minDiff) {\n          updateKey = key;\n          minDiff = diff;\n        }\n      } // generate a \"candidate\" set of values - a suggestion of what to do\n\n\n      var nextHandles = getUpdatedHandles(curr, updateKey, updateValue, reversed); // submit the candidate values\n\n      this.setState({\n        activeHandleID: updateKey\n      }, function () {\n        _this2.submitUpdate(nextHandles, true);\n\n        isTouch ? _this2.addTouchEvents() : _this2.addMouseEvents();\n      });\n    }\n  }, {\n    key: \"addMouseEvents\",\n    value: function addMouseEvents() {\n      if (isBrowser) {\n        document.addEventListener('mousemove', this.onMouseMove);\n        document.addEventListener('mouseup', this.onMouseUp);\n      }\n    }\n  }, {\n    key: \"addTouchEvents\",\n    value: function addTouchEvents() {\n      if (isBrowser) {\n        document.addEventListener('touchmove', this.onTouchMove);\n        document.addEventListener('touchend', this.onTouchEnd);\n      }\n    }\n  }, {\n    key: \"submitUpdate\",\n    value: function submitUpdate(next) {\n      var callOnChange = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var _this$props2 = this.props,\n          _this$props2$mode = _this$props2.mode,\n          mode = _this$props2$mode === void 0 ? 1 : _this$props2$mode,\n          _this$props2$step = _this$props2.step,\n          step = _this$props2$step === void 0 ? 0.1 : _this$props2$step,\n          _this$props2$onUpdate = _this$props2.onUpdate,\n          onUpdate = _this$props2$onUpdate === void 0 ? noop : _this$props2$onUpdate,\n          _this$props2$onChange = _this$props2.onChange,\n          onChange = _this$props2$onChange === void 0 ? noop : _this$props2$onChange,\n          _this$props2$reversed = _this$props2.reversed,\n          reversed = _this$props2$reversed === void 0 ? false : _this$props2$reversed; //@ts-ignore\n\n      var getValue = this.state.valueToStep.getValue;\n      this.setState(function (_ref2) {\n        var curr = _ref2.handles;\n        var handles = []; // given the current handles and a candidate set, decide what to do\n\n        if (typeof mode === 'function') {\n          handles = mode(curr, next, step, reversed, getValue);\n          warning(Array.isArray(handles), 'Custom mode function did not return an array.');\n        } else {\n          switch (mode) {\n            case 1:\n              handles = mode1(curr, next);\n              break;\n\n            case 2:\n              handles = mode2(curr, next);\n              break;\n\n            case 3:\n              handles = mode3(curr, next, step, reversed, getValue);\n              break;\n\n            default:\n              handles = next;\n              warning(false, \"\".concat(prfx, \" Invalid mode value.\"));\n          }\n        }\n\n        onUpdate(handles.map(function (d) {\n          return d.val;\n        }));\n\n        if (callOnChange) {\n          onChange(handles.map(function (d) {\n            return d.val;\n          }));\n        }\n\n        return {\n          handles: handles\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state2 = this.state,\n          handles = _this$state2.handles,\n          valueToPerc = _this$state2.valueToPerc,\n          activeHandleID = _this$state2.activeHandleID,\n          _this$props3 = this.props,\n          className = _this$props3.className,\n          _this$props3$rootStyl = _this$props3.rootStyle,\n          rootStyle = _this$props3$rootStyl === void 0 ? {} : _this$props3$rootStyl,\n          _this$props3$rootProp = _this$props3.rootProps,\n          rootProps = _this$props3$rootProp === void 0 ? {} : _this$props3$rootProp,\n          _this$props3$componen = _this$props3.component,\n          Comp = _this$props3$componen === void 0 ? 'div' : _this$props3$componen,\n          _this$props3$disabled = _this$props3.disabled,\n          disabled = _this$props3$disabled === void 0 ? false : _this$props3$disabled,\n          _this$props3$flatten = _this$props3.flatten,\n          flatten = _this$props3$flatten === void 0 ? false : _this$props3$flatten;\n      var mappedHandles = handles.map(function (_ref3) {\n        var key = _ref3.key,\n            val = _ref3.val; // @ts-ignore\n\n        return {\n          id: key,\n          value: val,\n          percent: valueToPerc.getValue(val)\n        };\n      });\n      var children = React.Children.map(this.props.children, function (child) {\n        if (isRCSComponent(child) === true) {\n          return /*#__PURE__*/React.cloneElement(child, {\n            scale: valueToPerc,\n            handles: mappedHandles,\n            activeHandleID: activeHandleID,\n            getEventData: _this3.getEventData,\n            emitKeyboard: disabled ? noop : _this3.onKeyDown,\n            emitMouse: disabled ? noop : _this3.onMouseDown,\n            emitTouch: disabled ? noop : _this3.onTouchStart\n          });\n        } else {\n          return child;\n        }\n      });\n      return flatten ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Comp, _objectSpread2(_objectSpread2({}, rootProps), {}, {\n        style: rootStyle,\n        className: className,\n        ref: this.slider\n      })), children) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Comp, _objectSpread2(_objectSpread2({}, rootProps), {}, {\n        style: rootStyle,\n        className: className,\n        ref: this.slider\n      }), children));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var _nextProps$step = nextProps.step,\n          step = _nextProps$step === void 0 ? 0.1 : _nextProps$step,\n          values = nextProps.values,\n          _nextProps$domain = nextProps.domain,\n          domain = _nextProps$domain === void 0 ? defaultDomain : _nextProps$domain,\n          _nextProps$reversed = nextProps.reversed,\n          reversed = _nextProps$reversed === void 0 ? false : _nextProps$reversed,\n          _nextProps$onUpdate = nextProps.onUpdate,\n          onUpdate = _nextProps$onUpdate === void 0 ? noop : _nextProps$onUpdate,\n          _nextProps$onChange = nextProps.onChange,\n          onChange = _nextProps$onChange === void 0 ? noop : _nextProps$onChange,\n          _nextProps$warnOnChan = nextProps.warnOnChanges,\n          warnOnChanges = _nextProps$warnOnChan === void 0 ? false : _nextProps$warnOnChan;\n      var valueToPerc = prevState.valueToPerc;\n      var valueToStep = prevState.valueToStep;\n      var pixelToStep = prevState.pixelToStep;\n      var nextState = {};\n\n      if (!valueToPerc || !valueToStep || !pixelToStep) {\n        valueToPerc = new LinearScale();\n        valueToStep = new DiscreteScale();\n        pixelToStep = new DiscreteScale();\n        nextState.valueToPerc = valueToPerc;\n        nextState.valueToStep = valueToStep;\n        nextState.pixelToStep = pixelToStep;\n      }\n\n      if (prevState.domain === defaultDomain || prevState.step === null || prevState.domain === null || prevState.reversed === null || step !== prevState.step || domain[0] !== prevState.domain[0] || domain[1] !== prevState.domain[1] || reversed !== prevState.reversed) {\n        var _domain = _slicedToArray(domain, 2),\n            min = _domain[0],\n            max = _domain[1];\n\n        valueToStep.setStep(step).setRange([min, max]).setDomain([min, max]);\n\n        if (reversed === true) {\n          valueToPerc.setDomain([min, max]).setRange([100, 0]);\n          pixelToStep.setStep(step).setRange([max, min]);\n        } else {\n          valueToPerc.setDomain([min, max]).setRange([0, 100]);\n          pixelToStep.setStep(step).setRange([min, max]);\n        }\n\n        warning(max > min, \"\".concat(prfx, \" Max must be greater than min (even if reversed). Max is \").concat(max, \". Min is \").concat(min, \".\"));\n\n        var _getHandles = getHandles(values || prevState.values, reversed, valueToStep, warnOnChanges),\n            handles = _getHandles.handles,\n            changes = _getHandles.changes;\n\n        if (changes || values === undefined || values === prevState.values) {\n          onUpdate(handles.map(function (d) {\n            return d.val;\n          }));\n          onChange(handles.map(function (d) {\n            return d.val;\n          }));\n        }\n\n        nextState.step = step;\n        nextState.values = values;\n        nextState.domain = domain === defaultDomain ? _toConsumableArray(domain) : domain;\n        nextState.handles = handles;\n        nextState.reversed = reversed;\n      } else if (!equal(values, prevState.values)) {\n        var _getHandles2 = getHandles(values, reversed, valueToStep, warnOnChanges),\n            _handles = _getHandles2.handles,\n            _changes = _getHandles2.changes;\n\n        if (_changes) {\n          onUpdate(_handles.map(function (d) {\n            return d.val;\n          }));\n          onChange(_handles.map(function (d) {\n            return d.val;\n          }));\n        }\n\n        nextState.values = values;\n        nextState.handles = _handles;\n      }\n\n      if (Object.keys(nextState).length) {\n        return nextState;\n      }\n\n      return null;\n    }\n  }]);\n\n  return Slider;\n}(PureComponent);\n\nexport { Handles, Rail, Slider, Ticks, Tracks, mode1, mode2, mode3 };","map":{"version":3,"sources":["../src/Slider/utils.ts","../src/Slider/modes.ts","../src/utils.ts","../src/Rail/Rail.tsx","../src/Handles/Handles.tsx","../src/scales/LinearScale.ts","../src/Ticks/Ticks.tsx","../src/Tracks/Tracks.tsx","../src/scales/DiscreteScale.ts","../src/Slider/Slider.tsx"],"names":["prfx","reversed","a","b","index","v","key","val","handles","updateValue","getSortByVal","s","slider","d0","vertical","d1","type","touches","e","values","valueToStep","warn","changes","x","warning","i","curr","next","indexForMovingHandle","handleMoveIsPositive","c","n","increment","n0","n1","newStep","getValue","clone","getUpdatedHandles","check","mode3","fns","fn","NOOP","value","percent","Rail","props","emitMouse","emitTouch","onMouseDown","callAll","onTouchStart","getRailProps","getEventData","activeHandleID","children","renderedChildren","React","Handles","emitKeyboard","onKeyDown","getHandleProps","LinearScale","interpolator","domain","range","r0","r1","d","ticks","count","defaultGetEventData","Ticks","scale","id","Tracks","getTrackProps","left","right","tracks","source","target","Math","DiscreteScale","step","p","clamp","isBrowser","noop","compare","m","equal","isRCSComponent","isValidElement","item","name","getNextValue","newVal","getPrevValue","defaultDomain","Slider","valueToPerc","pixelToStep","onUpdate","onChange","warnOnChanges","nextProps","prevState","nextState","min","max","getHandles","Object","getSliderDomain","document","validUpKeys","validDownKeys","found","currVal","nextHandles","isNotValidTouch","onSlideStart","handleID","isTouch","getTouchPosition","updateKey","minDiff","diff","callOnChange","mode","Array","mode1","mode2","onSlideEnd","className","rootStyle","rootProps","Comp","disabled","flatten","mappedHandles","style","ref"],"mappings":"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","sourcesContent":["import React from 'react';\nimport warning from 'warning';\n\nimport { DiscreteScale } from '../scales/DiscreteScale';\nimport { HandleItem } from '../types';\n\nexport const prfx = 'react-compound-slider:';\n\nexport function getSortByVal(reversed: boolean = false) {\n  return function sortByVal(a: HandleItem, b: HandleItem) {\n    if (a.val > b.val) {\n      return reversed ? -1 : 1;\n    }\n\n    if (b.val > a.val) {\n      return reversed ? 1 : -1;\n    }\n\n    return 0;\n  };\n}\n\nexport function getUpdatedHandles(\n  handles: HandleItem[],\n  updateKey: string,\n  updateValue: number,\n  reversed: boolean = false\n) {\n  const index = handles.findIndex(v => v.key === updateKey);\n\n  if (index !== -1) {\n    const { key, val } = handles[index];\n\n    if (val === updateValue) {\n      return handles;\n    }\n\n    return [\n      ...handles.slice(0, index),\n      { key, val: updateValue },\n      ...handles.slice(index + 1),\n    ].sort(getSortByVal(reversed));\n  }\n\n  return handles;\n}\n\nexport function getSliderDomain(slider: Element | null, vertical: boolean) {\n  if (!slider) {\n    return [0, 0];\n  }\n\n  const s = slider.getBoundingClientRect();\n\n  const d0 = vertical ? s.top : s.left;\n  const d1 = vertical ? s.bottom : s.right;\n\n  return [d0, d1];\n}\n\nexport function isNotValidTouch({\n  type = '',\n  touches,\n}: {\n  type: string;\n  touches: TouchEvent['touches'];\n}) {\n  return (\n    !touches ||\n    touches.length > 1 ||\n    (type.toLowerCase() === 'touchend' && touches.length > 0)\n  );\n}\n\nexport function getTouchPosition(\n  vertical: boolean,\n  e: React.TouchEvent | TouchEvent\n) {\n  return vertical ? e.touches[0].clientY : e.touches[0].pageX;\n}\n\nexport function getHandles(\n  values: ReadonlyArray<number> = [],\n  reversed: boolean,\n  valueToStep: DiscreteScale,\n  warn: boolean\n) {\n  let changes = 0;\n\n  const handles = values\n    .map(x => {\n      const val = valueToStep.getValue(x);\n\n      if (x !== val) {\n        changes += 1;\n        warning(\n          !warn,\n          `${prfx} Invalid value encountered. Changing ${x} to ${val}.`\n        );\n      }\n\n      return val;\n    })\n    .map((val, i) => ({ key: `$$-${i}`, val }))\n    .sort(getSortByVal(reversed));\n\n  return { handles, changes };\n}\n","import { getUpdatedHandles } from './utils';\nimport { HandleItem } from '../types';\n\n// default mode\nexport function mode1(_: HandleItem[], next: HandleItem[]) {\n  return next;\n}\n\n// prevent duplicate values and crossing\nexport function mode2(curr: HandleItem[], next: HandleItem[]) {\n  for (let i = 0; i < curr.length; i++) {\n    if (curr[i].key !== next[i].key) {\n      return curr;\n    }\n\n    if (next[i + 1] && next[i].val === next[i + 1].val) {\n      return curr;\n    }\n  }\n\n  return next;\n}\n\n// pushable mode\nexport function mode3(\n  curr: HandleItem[],\n  next: HandleItem[],\n  step: number,\n  reversed: boolean,\n  getValue: (x: number) => number\n): HandleItem[] {\n  let indexForMovingHandle = -1;\n  let handleMoveIsPositive = true;\n\n  for (let i = 0; i < curr.length; i++) {\n    const c = curr[i];\n    const n = next[i];\n\n    // make sure keys are in same order if not return curr\n    if (!n || n.key !== c.key) {\n      return curr;\n    } else if (n.val !== c.val) {\n      indexForMovingHandle = i;\n      handleMoveIsPositive = n.val - c.val > 0;\n    }\n  }\n\n  // nothing has changed (shouldn't happen but just in case).\n  if (indexForMovingHandle === -1) {\n    return curr;\n  } else {\n    const increment = handleMoveIsPositive ? step : -step;\n\n    for (let i = 0; i < next.length; i++) {\n      const n0 = next[i];\n      const n1 = next[i + 1];\n\n      if (n1 && n0.val === n1.val) {\n        if (i === indexForMovingHandle) {\n          const newStep = n1.val + increment;\n          if (getValue(newStep) === newStep) {\n            const clone = getUpdatedHandles(\n              next,\n              n1.key,\n              n1.val + increment,\n              reversed\n            );\n            const check = mode3(next, clone, step, reversed, getValue);\n\n            if (check === next) {\n              return curr;\n            } else {\n              return check;\n            }\n          } else {\n            return curr;\n          }\n        } else {\n          const newStep = n0.val + increment;\n          if (getValue(newStep) === newStep) {\n            const clone = getUpdatedHandles(\n              next,\n              n0.key,\n              n0.val + increment,\n              reversed\n            );\n            const check = mode3(next, clone, step, reversed, getValue);\n\n            if (check === next) {\n              return curr;\n            } else {\n              return check;\n            }\n          } else {\n            return curr;\n          }\n        }\n      }\n    }\n  }\n\n  return next;\n}\n","export function callAll<T>(...fns: (((e: T) => void) | undefined)[]) {\n  return (e: T) => {\n    return fns.forEach(fn => fn && fn(e));\n  };\n}\n","import React, { Component } from 'react';\nimport { callAll } from '../utils';\n\nimport { OtherProps } from '../types';\nimport { RailProps } from './types';\n\nconst NOOP = () => ({ value: 0, percent: 0 });\n\nexport class Rail extends Component<RailProps> {\n  getRailProps = (props: OtherProps = {}) => {\n    const { emitMouse, emitTouch } = this.props;\n\n    return {\n      ...props,\n      onMouseDown: callAll<React.MouseEvent<Element>>(\n        props && props.onMouseDown,\n        emitMouse\n      ),\n      onTouchStart: callAll(props && props.onTouchStart, emitTouch),\n    };\n  };\n\n  render() {\n    const {\n      getRailProps,\n      props: { getEventData, activeHandleID = '', children },\n    } = this;\n\n    const renderedChildren = children({\n      getEventData: getEventData || NOOP,\n      activeHandleID,\n      getRailProps,\n    });\n    return renderedChildren && React.Children.only(renderedChildren);\n  }\n}\n","import React, { Component } from 'react';\nimport { callAll } from '../utils';\n\nimport { OtherProps } from '../types';\nimport { HandlesProps } from './types';\n\nexport class Handles extends Component<HandlesProps> {\n  autofocus = (e: React.MouseEvent<Element>) => {\n    if (e.target instanceof HTMLElement) {\n      e.target.focus();\n    }\n  };\n\n  getHandleProps = (id: string, props: OtherProps = {}) => {\n    const { emitKeyboard, emitMouse, emitTouch } = this.props;\n\n    return {\n      ...props,\n      onKeyDown: callAll<React.KeyboardEvent<Element>>(\n        props && props.onKeyDown,\n        (e: React.KeyboardEvent<Element>) => emitKeyboard && emitKeyboard(e, id)\n      ),\n      onMouseDown: callAll<React.MouseEvent<Element>>(\n        props && props.onMouseDown,\n        this.autofocus,\n        (e: React.MouseEvent) => emitMouse && emitMouse(e, id)\n      ),\n      onTouchStart: callAll<React.TouchEvent<Element>>(\n        props && props.onTouchStart,\n        (e: React.TouchEvent<Element>) => emitTouch && emitTouch(e, id)\n      ),\n    };\n  };\n\n  render() {\n    const {\n      getHandleProps,\n      props: { activeHandleID = '', children, handles = [] },\n    } = this;\n\n    const renderedChildren = children({\n      handles,\n      activeHandleID,\n      getHandleProps,\n    });\n\n    return renderedChildren && React.Children.only(renderedChildren);\n  }\n}\n","import { ticks } from 'd3-array';\n\nimport { Interpolator } from '../types';\n\nexport class LinearScale {\n  interpolator: Interpolator | null;\n  domain: number[] = [0, 1];\n  range: number[] = [0, 1];\n\n  constructor() {\n    this.domain = [0, 1];\n    this.range = [0, 1];\n    this.interpolator = null;\n  }\n\n  createInterpolator(domain: number[], range: number[]) {\n    const d0 = domain[0];\n    const d1 = domain[1];\n\n    const r0 = range[0];\n    const r1 = range[1];\n\n    if (d1 < d0) {\n      return (x: number) =>\n        this.interpolateValue(r1, r0)(this.deinterpolateValue(d1, d0)(x));\n    } else {\n      return (x: number) =>\n        this.interpolateValue(r0, r1)(this.deinterpolateValue(d0, d1)(x));\n    }\n  }\n\n  interpolateValue(a: number, b: number) {\n    return (\n      (a = +a),\n      (b -= a),\n      function i(t: number) {\n        return a + b * t;\n      }\n    );\n  }\n\n  deinterpolateValue(a: number, b: number) {\n    return (b -= a = +a) ? (x: number) => (x - a) / b : () => b;\n  }\n\n  rescale() {\n    this.interpolator = null;\n\n    return this;\n  }\n\n  getValue(x: number) {\n    const { domain, range } = this;\n\n    return (\n      this.interpolator ||\n      (this.interpolator = this.createInterpolator(domain, range))\n    )(+x);\n  }\n\n  setDomain(val: number[]) {\n    this.domain = [val[0], val[1]];\n\n    this.rescale();\n\n    return this;\n  }\n\n  getDomain() {\n    return this.domain;\n  }\n\n  setRange(val: number[]) {\n    this.range = [val[0], val[1]];\n\n    return this;\n  }\n\n  getRange() {\n    return this.range;\n  }\n\n  getTicks(count: number) {\n    const d = this.domain;\n    return ticks(d[0], d[d.length - 1], count ? count : 10);\n  }\n}\n","import React, { Component } from 'react';\n\nimport { TicksProps } from './types';\nimport { LinearScale } from '../scales/LinearScale';\n\nconst defaultGetEventData = () => ({ value: 0, percent: 0 });\n\nexport class Ticks extends Component<TicksProps> {\n  public render() {\n    const {\n      children,\n      values,\n      scale = new LinearScale(),\n      count = 10,\n      getEventData = defaultGetEventData,\n      activeHandleID = '',\n    } = this.props;\n\n    const ticks = (values ? values : scale.getTicks(count)).map((value) => ({\n      id: `$$-${value}`,\n      value,\n      percent: scale.getValue(value),\n    }));\n\n    const renderedChildren = children({ getEventData, activeHandleID, ticks });\n    return renderedChildren && React.Children.only(renderedChildren);\n  }\n}\n","import React, { Component } from 'react';\n\nimport { callAll } from '../utils';\nimport { LinearScale } from '../scales/LinearScale';\nimport { TracksProps } from './types';\nimport { OtherProps } from '../types';\n\nconst defaultGetEventData = () => ({ value: 0, percent: 0 });\n\nexport class Tracks extends Component<TracksProps> {\n  getTrackProps = (props?: OtherProps) => {\n    const { emitMouse, emitTouch } = this.props;\n\n    return {\n      ...(props || {}),\n      onMouseDown: callAll<React.MouseEvent<Element>>(\n        props && props.onMouseDown,\n        emitMouse\n      ),\n      onTouchStart: callAll<React.TouchEvent<Element>>(\n        props && props.onTouchStart,\n        emitTouch\n      ),\n    };\n  };\n\n  render() {\n    const {\n      getTrackProps,\n      props: {\n        children,\n        left = true,\n        right = true,\n        scale = new LinearScale(),\n        handles = [],\n        getEventData = defaultGetEventData,\n        activeHandleID = '',\n      },\n    } = this;\n\n    const domain = scale.getDomain();\n    const tracks = [];\n\n    for (let i = 0; i < handles.length + 1; i++) {\n      let source = handles[i - 1];\n      let target = handles[i];\n\n      if (i === 0 && left === true) {\n        source = { id: '$', value: domain[0], percent: 0 };\n      } else if (i === handles.length && right === true) {\n        target = { id: '$', value: domain[1], percent: 100 };\n      }\n\n      if (source && target) {\n        tracks.push({\n          id: `${source.id}-${target.id}`,\n          source,\n          target,\n        });\n      }\n    }\n\n    const renderedChildren = children({\n      getEventData,\n      activeHandleID,\n      tracks,\n      getTrackProps,\n    });\n\n    return renderedChildren && React.Children.only(renderedChildren);\n  }\n}\n","function clamp(value: number, min: number, max: number) {\n  return Math.min(Math.max(value, min), max);\n}\n\nexport class DiscreteScale {\n  step: number = 1;\n  domain: number[] = [0, 1];\n  range: number[] = [0, 1];\n\n  setDomain = (val: number[]) => {\n    this.domain = [val[0], val[1]];\n\n    return this;\n  };\n\n  setRange = (val: number[]) => {\n    this.range = [val[0], val[1]];\n\n    return this;\n  };\n\n  setStep = (val: number) => {\n    this.step = val;\n\n    return this;\n  };\n\n  getValue = (x: number) => {\n    const {\n      domain: [d0, d1],\n      range: [r0, r1],\n      step,\n    } = this;\n\n    const p = (clamp(x, d0, d1) - d0) / (d1 - d0);\n    const b = step * Math.round((p * (r1 - r0)) / step) + r0;\n\n    return clamp(b, r0 < r1 ? r0 : r1, r1 > r0 ? r1 : r0);\n  };\n}\n","import React, { PureComponent, isValidElement } from 'react';\nimport warning from 'warning';\nimport { mode1, mode2, mode3 } from './modes';\nimport {\n  isNotValidTouch,\n  getTouchPosition,\n  getUpdatedHandles,\n  getSliderDomain,\n  getHandles,\n  prfx,\n} from './utils';\nimport { Rail } from '../Rail';\nimport { Handles } from '../Handles';\nimport { Ticks } from '../Ticks';\nimport { Tracks } from '../Tracks';\nimport { LinearScale } from '../scales/LinearScale';\nimport { DiscreteScale } from '../scales/DiscreteScale';\n\nimport { SliderProps, SliderState } from './types';\nimport { HandleItem } from '../types';\n\nconst isBrowser =\n  typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst noop = () => {};\n\nconst compare = (b: any[]) => (m: any, d: any, i: number) => m && b[i] === d;\n\nconst equal = (a: any, b: any) => {\n  return a === b || (a.length === b.length && a.reduce(compare(b), true));\n};\n\ninterface RCSComponent {\n  type: {\n    name: 'Rail' | 'Handles' | 'Ticks' | 'Tracks';\n  };\n}\n\nconst isRCSComponent = (item: React.ReactNode): item is RCSComponent => {\n  if (!isValidElement(item)) {\n    return false;\n  }\n\n  const type = (item as RCSComponent).type;\n  const name = type ? type.name : '';\n\n  return (\n    name === Handles.name ||\n    name === Rail.name ||\n    name === Ticks.name ||\n    name === Tracks.name\n  );\n};\n\nconst getNextValue = (\n  curr: number,\n  step: number,\n  domain: ReadonlyArray<number>,\n  reversed: boolean\n) => {\n  const newVal = reversed ? curr - step : curr + step;\n  return reversed ? Math.max(domain[0], newVal) : Math.min(domain[1], newVal);\n};\n\nconst getPrevValue = (\n  curr: number,\n  step: number,\n  domain: ReadonlyArray<number>,\n  reversed: boolean\n) => {\n  const newVal = reversed ? curr + step : curr - step;\n  return reversed ? Math.min(domain[1], newVal) : Math.max(domain[0], newVal);\n};\n\nconst defaultDomain = [0, 100];\n\nexport class Slider<\n  T extends HTMLDivElement = HTMLDivElement\n> extends PureComponent<SliderProps, SliderState> {\n  state = {\n    step: 0.1,\n    values: [],\n    domain: defaultDomain,\n    handles: [] as HandleItem[],\n    reversed: false,\n    activeHandleID: '',\n    valueToPerc: null,\n    valueToStep: null,\n    pixelToStep: null,\n  };\n\n  slider = React.createRef<T>();\n\n  static getDerivedStateFromProps(\n    nextProps: SliderProps,\n    prevState: SliderState\n  ) {\n    const {\n      step = 0.1,\n      values,\n      domain = defaultDomain,\n      reversed = false,\n      onUpdate = noop,\n      onChange = noop,\n      warnOnChanges = false,\n    } = nextProps;\n    let valueToPerc = prevState.valueToPerc;\n    let valueToStep = prevState.valueToStep;\n    let pixelToStep = prevState.pixelToStep;\n\n    const nextState: Partial<SliderState> = {};\n\n    if (!valueToPerc || !valueToStep || !pixelToStep) {\n      valueToPerc = new LinearScale();\n      valueToStep = new DiscreteScale();\n      pixelToStep = new DiscreteScale();\n\n      nextState.valueToPerc = valueToPerc;\n      nextState.valueToStep = valueToStep;\n      nextState.pixelToStep = pixelToStep;\n    }\n\n    if (\n      prevState.domain === defaultDomain ||\n      prevState.step === null ||\n      prevState.domain === null ||\n      prevState.reversed === null ||\n      step !== prevState.step ||\n      domain[0] !== prevState.domain[0] ||\n      domain[1] !== prevState.domain[1] ||\n      reversed !== prevState.reversed\n    ) {\n      const [min, max] = domain;\n      valueToStep.setStep(step).setRange([min, max]).setDomain([min, max]);\n\n      if (reversed === true) {\n        valueToPerc.setDomain([min, max]).setRange([100, 0]);\n        pixelToStep.setStep(step).setRange([max, min]);\n      } else {\n        valueToPerc.setDomain([min, max]).setRange([0, 100]);\n        pixelToStep.setStep(step).setRange([min, max]);\n      }\n\n      warning(\n        max > min,\n        `${prfx} Max must be greater than min (even if reversed). Max is ${max}. Min is ${min}.`\n      );\n\n      const { handles, changes } = getHandles(\n        values || prevState.values,\n        reversed,\n        valueToStep,\n        warnOnChanges\n      );\n\n      if (changes || values === undefined || values === prevState.values) {\n        onUpdate(handles.map((d) => d.val));\n        onChange(handles.map((d) => d.val));\n      }\n\n      nextState.step = step;\n      nextState.values = values;\n      nextState.domain = domain === defaultDomain ? [...domain] : domain;\n      nextState.handles = handles;\n      nextState.reversed = reversed;\n    } else if (!equal(values, prevState.values)) {\n      const { handles, changes } = getHandles(\n        values,\n        reversed,\n        valueToStep,\n        warnOnChanges\n      );\n\n      if (changes) {\n        onUpdate(handles.map((d) => d.val));\n        onChange(handles.map((d) => d.val));\n      }\n\n      nextState.values = values;\n      nextState.handles = handles;\n    }\n\n    if (Object.keys(nextState).length) {\n      return nextState;\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    const { pixelToStep } = this.state;\n    const { vertical } = this.props;\n\n    // @ts-ignore\n    pixelToStep.setDomain(getSliderDomain(this.slider.current, vertical));\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  removeListeners() {\n    if (isBrowser) {\n      document.removeEventListener('mousemove', this.onMouseMove);\n      document.removeEventListener('mouseup', this.onMouseUp);\n      document.removeEventListener('touchmove', this.onTouchMove);\n      document.removeEventListener('touchend', this.onTouchEnd);\n    }\n  }\n\n  onKeyDown = (e: KeyboardEvent, handleID: string) => {\n    let validUpKeys = ['ArrowRight', 'ArrowUp'];\n    let validDownKeys = ['ArrowDown', 'ArrowLeft'];\n\n    const {\n      state: { handles },\n      props: {\n        step = 0.1,\n        reversed = false,\n        vertical = false,\n        domain = [0, 100] as number[],\n      },\n    } = this;\n    const key = e.key || `${e.keyCode}`;\n\n    if (!validUpKeys.concat(validDownKeys).includes(key)) {\n      return;\n    }\n\n    if (vertical) {\n      [validUpKeys, validDownKeys] = [validDownKeys, validUpKeys];\n    }\n\n    e.stopPropagation && e.stopPropagation();\n    e.preventDefault && e.preventDefault();\n\n    const found = handles.find((value) => {\n      return value.key === handleID;\n    });\n\n    if (!found) {\n      return;\n    }\n\n    const currVal = found.val;\n    let newVal = currVal;\n\n    if (validUpKeys.includes(key)) {\n      newVal = getNextValue(currVal, step, domain, reversed);\n    } else if (validDownKeys.includes(key)) {\n      newVal = getPrevValue(currVal, step, domain, reversed);\n    }\n    const nextHandles = handles.map((v) =>\n      v.key === handleID ? { key: v.key, val: newVal } : v\n    );\n\n    this.submitUpdate(nextHandles, true);\n  };\n\n  onMouseDown = (e: MouseEvent, handleID: string) => {\n    this.onStart(e, handleID, false);\n  };\n\n  onTouchStart = (e: TouchEvent, handleID: string) => {\n    if (isNotValidTouch(e)) {\n      return;\n    }\n\n    this.onStart(e, handleID, true);\n  };\n\n  onStart(e: MouseEvent | TouchEvent, handleID: string, isTouch: boolean) {\n    const {\n      state: { handles },\n      props: { onSlideStart = noop },\n    } = this;\n\n    if (!isTouch) {\n      e.preventDefault && e.preventDefault();\n    }\n\n    e.stopPropagation && e.stopPropagation();\n\n    const found = handles.find((value) => {\n      return value.key === handleID;\n    });\n\n    if (found) {\n      this.setState({ activeHandleID: handleID });\n      onSlideStart(\n        handles.map((d) => d.val),\n        { activeHandleID: handleID }\n      );\n      isTouch ? this.addTouchEvents() : this.addMouseEvents();\n    } else {\n      this.setState({ activeHandleID: '' });\n      this.handleRailAndTrackClicks(e, isTouch);\n    }\n  }\n\n  handleRailAndTrackClicks(e: MouseEvent | TouchEvent, isTouch: boolean) {\n    const {\n      state: { handles: curr, pixelToStep },\n      props: { vertical, reversed = false },\n    } = this;\n    const { slider } = this;\n\n    // double check the dimensions of the slider\n    // @ts-ignore\n    pixelToStep.setDomain(getSliderDomain(slider.current, vertical));\n\n    // find the closest value (aka step) to the event location\n    let updateValue: number;\n\n    if (isTouch) {\n      // @ts-ignore\n      updateValue = pixelToStep.getValue(getTouchPosition(vertical, e));\n    } else {\n      // @ts-ignore\n      updateValue = pixelToStep.getValue(vertical ? e.clientY : e.pageX);\n    }\n\n    // find the closest handle key\n    let updateKey = '';\n    let minDiff = Infinity;\n\n    for (let i = 0; i < curr.length; i++) {\n      const { key, val } = curr[i];\n      const diff = Math.abs(val - updateValue);\n\n      if (diff < minDiff) {\n        updateKey = key;\n        minDiff = diff;\n      }\n    }\n\n    // generate a \"candidate\" set of values - a suggestion of what to do\n    const nextHandles = getUpdatedHandles(\n      curr,\n      updateKey,\n      updateValue,\n      reversed\n    );\n\n    // submit the candidate values\n    this.setState({ activeHandleID: updateKey }, () => {\n      this.submitUpdate(nextHandles, true);\n      isTouch ? this.addTouchEvents() : this.addMouseEvents();\n    });\n  }\n\n  getEventData = (e: React.MouseEvent | React.TouchEvent, isTouch: boolean) => {\n    const {\n      state: { pixelToStep, valueToPerc },\n      props: { vertical },\n    } = this;\n\n    // double check the dimensions of the slider\n    // @ts-ignore\n    pixelToStep.setDomain(getSliderDomain(this.slider.current, vertical));\n\n    let value;\n\n    if (isTouch && e instanceof TouchEvent) {\n      // @ts-ignore\n      value = pixelToStep.getValue(getTouchPosition(vertical, e));\n    } else if (e instanceof MouseEvent) {\n      // @ts-ignore\n      value = pixelToStep.getValue(vertical ? e.clientY : e.pageX);\n    }\n    return {\n      value,\n      // @ts-ignore\n      percent: valueToPerc.getValue(value),\n    };\n  };\n\n  addMouseEvents() {\n    if (isBrowser) {\n      document.addEventListener('mousemove', this.onMouseMove);\n      document.addEventListener('mouseup', this.onMouseUp);\n    }\n  }\n\n  addTouchEvents() {\n    if (isBrowser) {\n      document.addEventListener('touchmove', this.onTouchMove);\n      document.addEventListener('touchend', this.onTouchEnd);\n    }\n  }\n\n  onMouseMove = (e: MouseEvent) => {\n    const {\n      state: { handles: curr, pixelToStep, activeHandleID = '' },\n      props: { vertical, reversed = false },\n    } = this;\n    // double check the dimensions of the slider\n    // @ts-ignore\n    pixelToStep.setDomain(getSliderDomain(this.slider.current, vertical));\n\n    // find the closest value (aka step) to the event location\n    // @ts-ignore\n    const updateValue = pixelToStep.getValue(vertical ? e.clientY : e.pageX);\n\n    // generate a \"candidate\" set of values - a suggestion of what to do\n    const nextHandles = getUpdatedHandles(\n      curr,\n      activeHandleID,\n      updateValue,\n      reversed\n    );\n\n    // submit the candidate values\n    this.submitUpdate(nextHandles);\n  };\n\n  onTouchMove = (e: TouchEvent) => {\n    const {\n      state: { handles: curr, pixelToStep, activeHandleID },\n      props: { vertical, reversed },\n    } = this;\n    if (pixelToStep === null || isNotValidTouch(e)) {\n      return;\n    }\n\n    // double check the dimensions of the slider\n    // @ts-ignore\n    pixelToStep.setDomain(getSliderDomain(this.slider.current, vertical));\n\n    // find the closest value (aka step) to the event location\n    // @ts-ignore\n    const updateValue = pixelToStep.getValue(getTouchPosition(vertical, e));\n\n    // generate a \"candidate\" set of values - a suggestion of what to do\n    const nextHandles = getUpdatedHandles(\n      curr,\n      activeHandleID,\n      updateValue,\n      reversed\n    );\n\n    // submit the candidate values\n    this.submitUpdate(nextHandles);\n  };\n\n  submitUpdate(next: HandleItem[], callOnChange = false) {\n    const {\n      mode = 1,\n      step = 0.1,\n      onUpdate = noop,\n      onChange = noop,\n      reversed = false,\n    } = this.props;\n    //@ts-ignore\n    const { getValue } = this.state.valueToStep;\n\n    this.setState(({ handles: curr }) => {\n      let handles: HandleItem[] = [];\n\n      // given the current handles and a candidate set, decide what to do\n      if (typeof mode === 'function') {\n        handles = mode(curr, next, step, reversed, getValue);\n        warning(\n          Array.isArray(handles),\n          'Custom mode function did not return an array.'\n        );\n      } else {\n        switch (mode) {\n          case 1:\n            handles = mode1(curr, next);\n            break;\n          case 2:\n            handles = mode2(curr, next);\n            break;\n          case 3:\n            handles = mode3(curr, next, step, reversed, getValue);\n            break;\n          default:\n            handles = next;\n            warning(false, `${prfx} Invalid mode value.`);\n        }\n      }\n\n      onUpdate(handles.map((d) => d.val));\n\n      if (callOnChange) {\n        onChange(handles.map((d) => d.val));\n      }\n\n      return { handles };\n    });\n  }\n\n  onMouseUp = () => {\n    const {\n      state: { handles = [], activeHandleID },\n      props: { onChange = noop, onSlideEnd = noop },\n    } = this;\n\n    onChange(handles.map((d) => d.val));\n    onSlideEnd(\n      handles.map((d) => d.val),\n      { activeHandleID }\n    );\n\n    this.setState({ activeHandleID: '' });\n\n    if (isBrowser) {\n      document.removeEventListener('mousemove', this.onMouseMove);\n      document.removeEventListener('mouseup', this.onMouseUp);\n    }\n  };\n\n  onTouchEnd = () => {\n    const {\n      state: { handles, activeHandleID },\n      props: { onChange = noop, onSlideEnd = noop },\n    } = this;\n\n    onChange(handles.map((d) => d.val));\n    onSlideEnd(\n      handles.map((d) => d.val),\n      { activeHandleID }\n    );\n\n    this.setState({ activeHandleID: '' });\n\n    if (isBrowser) {\n      document.removeEventListener('touchmove', this.onTouchMove);\n      document.removeEventListener('touchend', this.onTouchEnd);\n    }\n  };\n\n  render() {\n    const {\n      state: { handles, valueToPerc, activeHandleID },\n      props: {\n        className,\n        rootStyle = {},\n        rootProps = {},\n        component: Comp = 'div',\n        disabled = false,\n        flatten = false,\n      },\n    } = this;\n\n    const mappedHandles = handles.map(({ key, val }) => {\n      // @ts-ignore\n      return { id: key, value: val, percent: valueToPerc.getValue(val) };\n    });\n\n    const children = React.Children.map(this.props.children, (child) => {\n      if (isRCSComponent(child) === true) {\n        return React.cloneElement(child as React.ReactElement, {\n          scale: valueToPerc,\n          handles: mappedHandles,\n          activeHandleID,\n          getEventData: this.getEventData,\n          emitKeyboard: disabled ? noop : this.onKeyDown,\n          emitMouse: disabled ? noop : this.onMouseDown,\n          emitTouch: disabled ? noop : this.onTouchStart,\n        });\n      } else {\n        return child;\n      }\n    });\n\n    return flatten ? (\n      <>\n        {React.createElement(Comp, {\n          ...rootProps,\n          style: rootStyle,\n          className: className,\n          ref: this.slider,\n        })}\n        {children}\n      </>\n    ) : (\n      <>\n        {React.createElement(\n          Comp,\n          {\n            ...rootProps,\n            style: rootStyle,\n            className: className,\n            ref: this.slider,\n          },\n          children\n        )}\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}