{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { createClassNames } from '../core/utils';\nvar cx = createClassNames('ToggleRefinement');\n\nvar ToggleRefinement = function ToggleRefinement(_ref) {\n  var currentRefinement = _ref.currentRefinement,\n      label = _ref.label,\n      canRefine = _ref.canRefine,\n      refine = _ref.refine,\n      className = _ref.className;\n  return React.createElement(\"div\", {\n    className: classNames(cx('', !canRefine && '-noRefinement'), className)\n  }, React.createElement(\"label\", {\n    className: cx('label')\n  }, React.createElement(\"input\", {\n    className: cx('checkbox'),\n    type: \"checkbox\",\n    checked: currentRefinement,\n    onChange: function onChange(event) {\n      return refine(event.target.checked);\n    }\n  }), React.createElement(\"span\", {\n    className: cx('labelText')\n  }, label)));\n};\n\nToggleRefinement.propTypes = {\n  currentRefinement: PropTypes.bool.isRequired,\n  label: PropTypes.string.isRequired,\n  canRefine: PropTypes.bool.isRequired,\n  refine: PropTypes.func.isRequired,\n  className: PropTypes.string\n};\nToggleRefinement.defaultProps = {\n  className: ''\n};\nexport default ToggleRefinement;","map":{"version":3,"sources":["C:/Users/Murtaza Jafari/Desktop/product-search/product/searcbox/node_modules/react-instantsearch-dom/dist/es/components/ToggleRefinement.js"],"names":["React","PropTypes","classNames","createClassNames","cx","ToggleRefinement","_ref","currentRefinement","label","canRefine","refine","className","createElement","type","checked","onChange","event","target","propTypes","bool","isRequired","string","func","defaultProps"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,IAAIC,EAAE,GAAGD,gBAAgB,CAAC,kBAAD,CAAzB;;AAEA,IAAIE,gBAAgB,GAAG,SAASA,gBAAT,CAA0BC,IAA1B,EAAgC;AACrD,MAAIC,iBAAiB,GAAGD,IAAI,CAACC,iBAA7B;AAAA,MACIC,KAAK,GAAGF,IAAI,CAACE,KADjB;AAAA,MAEIC,SAAS,GAAGH,IAAI,CAACG,SAFrB;AAAA,MAGIC,MAAM,GAAGJ,IAAI,CAACI,MAHlB;AAAA,MAIIC,SAAS,GAAGL,IAAI,CAACK,SAJrB;AAKA,SAAOX,KAAK,CAACY,aAAN,CAAoB,KAApB,EAA2B;AAChCD,IAAAA,SAAS,EAAET,UAAU,CAACE,EAAE,CAAC,EAAD,EAAK,CAACK,SAAD,IAAc,eAAnB,CAAH,EAAwCE,SAAxC;AADW,GAA3B,EAEJX,KAAK,CAACY,aAAN,CAAoB,OAApB,EAA6B;AAC9BD,IAAAA,SAAS,EAAEP,EAAE,CAAC,OAAD;AADiB,GAA7B,EAEAJ,KAAK,CAACY,aAAN,CAAoB,OAApB,EAA6B;AAC9BD,IAAAA,SAAS,EAAEP,EAAE,CAAC,UAAD,CADiB;AAE9BS,IAAAA,IAAI,EAAE,UAFwB;AAG9BC,IAAAA,OAAO,EAAEP,iBAHqB;AAI9BQ,IAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;AACjC,aAAON,MAAM,CAACM,KAAK,CAACC,MAAN,CAAaH,OAAd,CAAb;AACD;AAN6B,GAA7B,CAFA,EASCd,KAAK,CAACY,aAAN,CAAoB,MAApB,EAA4B;AAC9BD,IAAAA,SAAS,EAAEP,EAAE,CAAC,WAAD;AADiB,GAA5B,EAEDI,KAFC,CATD,CAFI,CAAP;AAcD,CApBD;;AAsBAH,gBAAgB,CAACa,SAAjB,GAA6B;AAC3BX,EAAAA,iBAAiB,EAAEN,SAAS,CAACkB,IAAV,CAAeC,UADP;AAE3BZ,EAAAA,KAAK,EAAEP,SAAS,CAACoB,MAAV,CAAiBD,UAFG;AAG3BX,EAAAA,SAAS,EAAER,SAAS,CAACkB,IAAV,CAAeC,UAHC;AAI3BV,EAAAA,MAAM,EAAET,SAAS,CAACqB,IAAV,CAAeF,UAJI;AAK3BT,EAAAA,SAAS,EAAEV,SAAS,CAACoB;AALM,CAA7B;AAOAhB,gBAAgB,CAACkB,YAAjB,GAAgC;AAC9BZ,EAAAA,SAAS,EAAE;AADmB,CAAhC;AAGA,eAAeN,gBAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { createClassNames } from '../core/utils';\nvar cx = createClassNames('ToggleRefinement');\n\nvar ToggleRefinement = function ToggleRefinement(_ref) {\n  var currentRefinement = _ref.currentRefinement,\n      label = _ref.label,\n      canRefine = _ref.canRefine,\n      refine = _ref.refine,\n      className = _ref.className;\n  return React.createElement(\"div\", {\n    className: classNames(cx('', !canRefine && '-noRefinement'), className)\n  }, React.createElement(\"label\", {\n    className: cx('label')\n  }, React.createElement(\"input\", {\n    className: cx('checkbox'),\n    type: \"checkbox\",\n    checked: currentRefinement,\n    onChange: function onChange(event) {\n      return refine(event.target.checked);\n    }\n  }), React.createElement(\"span\", {\n    className: cx('labelText')\n  }, label)));\n};\n\nToggleRefinement.propTypes = {\n  currentRefinement: PropTypes.bool.isRequired,\n  label: PropTypes.string.isRequired,\n  canRefine: PropTypes.bool.isRequired,\n  refine: PropTypes.func.isRequired,\n  className: PropTypes.string\n};\nToggleRefinement.defaultProps = {\n  className: ''\n};\nexport default ToggleRefinement;"]},"metadata":{},"sourceType":"module"}