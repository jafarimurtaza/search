{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Murtaza Jafari\\\\Desktop\\\\product-search\\\\product\\\\searcbox\\\\src\\\\widgets\\\\PriceSlider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { connectRange } from 'react-instantsearch-dom';\nimport { Slider, Rail, Handles, Tracks, Ticks } from 'react-compound-slider';\nimport { formatNumber } from '../utils';\nimport './PriceSlider.css';\n\nfunction Handle({\n  domain: [min, max],\n  handle: {\n    id,\n    value,\n    percent\n  },\n  disabled,\n  getHandleProps\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        left: `${percent}%`,\n        width: 40,\n        height: 25,\n        transform: 'translate(-50%, -100%)',\n        cursor: disabled ? 'not-allowed' : 'grab',\n        zIndex: 1\n      },\n      \"aria-hidden\": true,\n      ...getHandleProps(id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      role: \"slider\",\n      className: \"slider-handle\",\n      \"aria-valuemin\": min,\n      \"aria-valuemax\": max,\n      \"aria-valuenow\": value,\n      style: {\n        left: `${percent}%`,\n        cursor: disabled ? 'not-allowed' : 'grab'\n      },\n      ...getHandleProps(id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = Handle;\n\nconst PriceSlider = ({\n  min,\n  max,\n  refine,\n  currentRefinement,\n  canRefine\n}) => {\n  _s();\n\n  const [ticksValues, setTicksValues] = useState([currentRefinement.min, currentRefinement.max]);\n  useEffect(() => {\n    setTicksValues([currentRefinement.min, currentRefinement.max]);\n  }, [currentRefinement]);\n\n  const onChange = values => {\n    refine({\n      min: values[0],\n      max: values[1]\n    });\n  };\n\n  if (!canRefine || ticksValues[0] === undefined || ticksValues[1] === undefined) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Slider, {\n    mode: 2,\n    step: 1,\n    domain: [min, max],\n    values: [currentRefinement.min, currentRefinement.max],\n    disabled: !canRefine,\n    onChange: onChange,\n    onUpdate: setTicksValues,\n    rootStyle: {\n      position: 'relative',\n      marginTop: '1.5rem'\n    },\n    className: \"ais-RangeSlider\",\n    children: [/*#__PURE__*/_jsxDEV(Rail, {\n      children: ({\n        getRailProps\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider-rail\",\n        ...getRailProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tracks, {\n      left: false,\n      right: false,\n      children: ({\n        tracks,\n        getTrackProps\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: tracks.map(({\n          id,\n          source,\n          target\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slider-track\",\n          style: {\n            left: `${source.percent}%`,\n            width: `${target.percent - source.percent}%`\n          },\n          ...getTrackProps()\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Handles, {\n      children: ({\n        handles,\n        getHandleProps\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: handles.map(handle => /*#__PURE__*/_jsxDEV(Handle, {\n          handle: handle,\n          domain: [min, max],\n          getHandleProps: getHandleProps\n        }, handle.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Ticks, {\n      values: ticksValues,\n      children: ({\n        ticks\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: ticks.map(({\n          id,\n          count,\n          value,\n          percent\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slider-tick\",\n          style: {\n            marginLeft: `${-(100 / count) / 2}%`,\n            width: `${100 / count}%`,\n            left: `${percent}%`\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#e2a400',\n              marginRight: 4\n            },\n            children: \"$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this), formatNumber(value)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PriceSlider, \"Uocg1f5fGoZwn1EetxXKmnMJ8Es=\");\n\n_c2 = PriceSlider;\nexport default _c3 = connectRange(PriceSlider);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Handle\");\n$RefreshReg$(_c2, \"PriceSlider\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["C:/Users/Murtaza Jafari/Desktop/product-search/product/searcbox/src/widgets/PriceSlider.js"],"names":["React","useState","useEffect","connectRange","Slider","Rail","Handles","Tracks","Ticks","formatNumber","Handle","domain","min","max","handle","id","value","percent","disabled","getHandleProps","position","left","width","height","transform","cursor","zIndex","PriceSlider","refine","currentRefinement","canRefine","ticksValues","setTicksValues","onChange","values","undefined","marginTop","getRailProps","tracks","getTrackProps","map","source","target","handles","ticks","count","marginLeft","color","marginRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { connectRange } from 'react-instantsearch-dom';\r\nimport { Slider, Rail, Handles, Tracks, Ticks } from 'react-compound-slider';\r\nimport { formatNumber } from '../utils';\r\nimport './PriceSlider.css';\r\n\r\nfunction Handle({\r\n  domain: [min, max],\r\n  handle: { id, value, percent },\r\n  disabled,\r\n  getHandleProps,\r\n}) {\r\n  return (\r\n    <>\r\n      {/* Dummy element to make the tooltip draggable */}\r\n      <div\r\n        style={{\r\n          position: 'absolute',\r\n          left: `${percent}%`,\r\n          width: 40,\r\n          height: 25,\r\n          transform: 'translate(-50%, -100%)',\r\n          cursor: disabled ? 'not-allowed' : 'grab',\r\n          zIndex: 1,\r\n        }}\r\n        aria-hidden={true}\r\n        {...getHandleProps(id)}\r\n      />\r\n      <div\r\n        role=\"slider\"\r\n        className=\"slider-handle\"\r\n        aria-valuemin={min}\r\n        aria-valuemax={max}\r\n        aria-valuenow={value}\r\n        style={{\r\n          left: `${percent}%`,\r\n          cursor: disabled ? 'not-allowed' : 'grab',\r\n        }}\r\n        {...getHandleProps(id)}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nconst PriceSlider = ({ min, max, refine, currentRefinement, canRefine }) => {\r\n  const [ticksValues, setTicksValues] = useState([\r\n    currentRefinement.min,\r\n    currentRefinement.max,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    setTicksValues([currentRefinement.min, currentRefinement.max]);\r\n  }, [currentRefinement]);\r\n\r\n  const onChange = values => {\r\n    refine({ min: values[0], max: values[1] });\r\n  };\r\n\r\n  if (\r\n    !canRefine ||\r\n    ticksValues[0] === undefined ||\r\n    ticksValues[1] === undefined\r\n  ) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Slider\r\n      mode={2}\r\n      step={1}\r\n      domain={[min, max]}\r\n      values={[currentRefinement.min, currentRefinement.max]}\r\n      disabled={!canRefine}\r\n      onChange={onChange}\r\n      onUpdate={setTicksValues}\r\n      rootStyle={{ position: 'relative', marginTop: '1.5rem' }}\r\n      className=\"ais-RangeSlider\"\r\n    >\r\n      <Rail>\r\n        {({ getRailProps }) => (\r\n          <div className=\"slider-rail\" {...getRailProps()} />\r\n        )}\r\n      </Rail>\r\n\r\n      <Tracks left={false} right={false}>\r\n        {({ tracks, getTrackProps }) => (\r\n          <div>\r\n            {tracks.map(({ id, source, target }) => (\r\n              <div\r\n                key={id}\r\n                className=\"slider-track\"\r\n                style={{\r\n                  left: `${source.percent}%`,\r\n                  width: `${target.percent - source.percent}%`,\r\n                }}\r\n                {...getTrackProps()}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </Tracks>\r\n\r\n      <Handles>\r\n        {({ handles, getHandleProps }) => (\r\n          <div>\r\n            {handles.map(handle => (\r\n              <Handle\r\n                key={handle.id}\r\n                handle={handle}\r\n                domain={[min, max]}\r\n                getHandleProps={getHandleProps}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </Handles>\r\n\r\n      <Ticks values={ticksValues}>\r\n        {({ ticks }) => (\r\n          <div>\r\n            {ticks.map(({ id, count, value, percent }) => (\r\n              <div\r\n                key={id}\r\n                className=\"slider-tick\"\r\n                style={{\r\n                  marginLeft: `${-(100 / count) / 2}%`,\r\n                  width: `${100 / count}%`,\r\n                  left: `${percent}%`,\r\n                }}\r\n              >\r\n                <span style={{ color: '#e2a400', marginRight: 4 }}>$</span>\r\n                {formatNumber(value)}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </Ticks>\r\n    </Slider>\r\n  );\r\n};\r\n\r\nexport default connectRange(PriceSlider);"]},"metadata":{},"sourceType":"module"}